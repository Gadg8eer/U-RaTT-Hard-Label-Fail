grf {
	grfid: "UFI\88";
	name: string(STR_GRF_NAME_MINI);
	desc: string(STR_GRF_DESCRIPTION_MINI);
	url:  string(STR_GRF_URL);
	version: 120;
	min_compatible_version: 90;
			param 0 {
        param_gui {
            type: int;
            name: string(STR_PARAM_GUI_NAME);
            desc: string(STR_PARAM_GUI_DESC);
			min_value: 0;
			max_value: 2;
            def_value: 0;
           names: {
					0: string(STR_PARAM_GUI_0);
					1: string(STR_PARAM_GUI_1);
                    2: string(STR_PARAM_GUI_2);
                    };
				}
			}
			param 1 {
        param_style {
            type: int;
            name: string(STR_PARAM_STYLE_NAME);
            desc: string(STR_PARAM_STYLE_DESC);
            min_value: 0;
            max_value: 1;
            def_value: 0;
            names: {
					0: string(STR_PARAM_STYLE_WHITE);
                    1: string(STR_PARAM_STYLE_YELLOW);
                    };
				}
			}
			param 2 {
		speed_limit_ORD2 {
			type: int;
			name: string(STR_PARAM_ORD2_SPEED_NAME);
			desc: string(STR_PARAM_ORD2_SPEED_DESC);
			min_value: 10;
			max_value: 80;
			def_value: 34;
				}
			}
			param 3 {
		speed_limit_ORD4 {
			type: int;
			name: string(STR_PARAM_ORD3_SPEED_NAME);
			desc: string(STR_PARAM_ORD3_SPEED_DESC);
			min_value: 10;
			max_value: 80;
			def_value: 42;
				}
			}
			param 4 {
		speed_limit_SRD1 {
			type: int;
			name: string(STR_PARAM_SRD1_SPEED_NAME);
			desc: string(STR_PARAM_SRD1_SPEED_DESC);
			min_value: 29;
			max_value: 255;
			def_value: 51;
			names: {
				29: string(STR_STRING_UNLIMITED);
					};
				}
			}
			param 5 {
		speed_limit_ARD0 {
			type: int;
			name: string(STR_PARAM_ARD0_SPEED_NAME);
			desc: string(STR_PARAM_ARD0_SPEED_DESC);
			min_value: 29;
			max_value: 255;
			def_value: 66;
			names: {
				29: string(STR_STRING_UNLIMITED);
					};
				}
			}
			param 6 {
		speed_limit_ARD3 {
			type: int;
			name: string(STR_PARAM_ARD3_SPEED_NAME);
			desc: string(STR_PARAM_ARD3_SPEED_DESC);
			min_value: 29;
			max_value: 255;
			def_value: 91;
			names: {
				29: string(STR_STRING_UNLIMITED);
					};
				}
			}
			param 7 {
		speed_limit_ARD5 {
			type: int;
			name: string(STR_PARAM_ARD5_SPEED_NAME);
			desc: string(STR_PARAM_ARD5_SPEED_DESC);
			min_value: 29;
			max_value: 255;
			def_value: 121;
			names: {
				29: string(STR_STRING_UNLIMITED);
					};
				}
			}
			param 8 {
		speed_limit_DRD3 {
			type: int;
			name: string(STR_PARAM_DRD3_SPEED_NAME);
			desc: string(STR_PARAM_DRD3_SPEED_DESC);
			min_value: 29;
			max_value: 255;
			def_value: 40;
			names: {
				29: string(STR_STRING_UNLIMITED);
					};
				}
			}
			param 9 {
		speed_limit_RAIL {
			type: int;
			name: string(STR_PARAM_RAIL_SPEED_NAME);
			desc: string(STR_PARAM_RAIL_SPEED_DESC);
			min_value: 29;
			max_value: 255;
			def_value: 40;
			names: {
				29: string(STR_STRING_UNLIMITED);
					};
				}
			}
			param 10 {
		speed_limit_ELRL {
			type: int;
			name: string(STR_PARAM_ELRL_SPEED_NAME);
			desc: string(STR_PARAM_ELRL_SPEED_DESC);
			min_value: 29;
			max_value: 255;
			def_value: 81;
			names: {
				29: string(STR_STRING_UNLIMITED);
					};
				}
			}
			param 11 {
		speed_limit_NIAE {
			type: int;
			name: string(STR_PARAM_NIAE_SPEED_NAME);
			desc: string(STR_PARAM_NIAE_SPEED_DESC);
			min_value: 29;
			max_value: 255;
			def_value: 61;
			names: {
				29: string(STR_STRING_UNLIMITED);
					};
				}
			}
	}

if (ttd_platform != PLATFORM_OPENTTD || (openttd_version < version_openttd(1, 13, 0, 0))) {
		error(FATAL, REQUIRES_OPENTTD, string(STR_OPENTTD_VERSION));
	}
    if (grf_future_status("UFI\89")) {
        error(FATAL, string(STR_ERROR));
    }
    if (grf_future_status("UB\01\01")) {
        error(FATAL, string(STR_ERROR));
    }
//==================================================================================================================================
//								SPEED LIMIT
//==================================================================================================================================
if ((param[2]   < 10) || (param[2]   > 80))   { param[2]   =  34;  }
if ((param[3]   < 10) || (param[3]   > 80))   { param[3]   =  42;  }
if ((param[4]   < 29) || (param[4]   > 255))  { param[4]   =  51;  }
if ((param[5]   < 29) || (param[5]   > 255))  { param[5]   =  66;  }
if ((param[6]   < 29) || (param[6]   > 255))  { param[6]   =  91;  }
if ((param[7]   < 29) || (param[7]   > 255))  { param[7]   = 121;  }
if ((param[8]   < 29) || (param[8]   > 255))  { param[8]   =  40;  }
if ((param[9]   < 29) || (param[9]   > 255))  { param[9]   =  40;  }
if ((param[10]  < 29) || (param[10]  > 255))  { param[10]  =  81;  }
if ((param[11]  < 29) || (param[11]  > 255))  { param[11]  =  61;  }
//==================================================================================================================================
//								BASECOST
//==================================================================================================================================
		basecost {
			PR_BUILD_ROAD: -1;
			}
		basecost {
			PR_MAINTENANCE_ROAD: -2;
			}
//==================================================================================================================================
//								TEMPLATES
//==================================================================================================================================
template ground_tile(x, y) { [x, y, 64, 31, -31, 0] }
template tmpl_underlay_overlay_straight(y) {
    ground_tile(  1,  y)
    ground_tile( 70,  y)
}
template tmpl_underlay_overlay_junctions(y) {
    ground_tile(139,  y)
    ground_tile(208,  y)
    ground_tile(277,  y)
    ground_tile(346,  y)
    ground_tile(415,  y)
}
template tmpl_underlay_overlay_corners(y) {
    ground_tile(484,  y)
    ground_tile(553,  y)
    ground_tile(622,  y)
    ground_tile(691,  y)
}
template tmpl_underlay_overlay_slope(y) {
    [    1,   y+36,   64,   39,   -31,   -8]
    [   70,   y+36,   64,   23,   -31,    0]
    [  139,   y+36,   64,   23,   -31,    0]
    [  208,   y+36,   64,   39,   -31,   -8]
}
template tmpl_underlay_overlay_half_tiles(y) {
    ground_tile(277, y+36)
    ground_tile(346, y+36)
    ground_tile(415, y+36)
    ground_tile(484, y+36)
}
template tmpl_underlay_overlay(y) {
    tmpl_underlay_overlay_straight(y)
    tmpl_underlay_overlay_junctions(y)
    tmpl_underlay_overlay_corners(y)
    tmpl_underlay_overlay_slope(y)
    tmpl_underlay_overlay_half_tiles(y)
}

template tmpl_bridge_straight(x) {
    ground_tile(  1+x, 401)
    ground_tile( 70+x, 401)
}
template tmpl_bridge_slope(x) {
    [  139+x,  401,   64,   39,   -31,   -8]
    [  208+x,  401,   64,   23,   -31,    0]
    [  277+x,  401,   64,   23,   -31,    0]
    [  346+x,  401,   64,   39,   -31,   -8]
}
template tmpl_bridge_surfaces(x) {
    tmpl_bridge_straight(x)
    tmpl_bridge_slope(x)
}

template tmpl_depot(x) {
    [    1+x,  445,   64,   61,   -31,  -30]
    [   70+x,  445,   64,   61,    -1,  -45]
    [  139+x,  445,   64,   61,   -31,  -30]
    [  208+x,  445,   64,   61,   -61,  -45]
    [  277+x,  445,   64,   61,   -61,  -45]
    [  346+x,  445,   64,   61,    -1,  -45]
}

template tmpl_roadstop(x) {
    ground_tile(  1+x, 511)
    ground_tile( 70+x, 511)
    ground_tile(139+x, 511)
    ground_tile(208+x, 511)
}

template tmpl_tunnels(x, y) {
    ground_tile(  1+x, 583+y)
    ground_tile( 70+x, 583+y)
    ground_tile(139+x, 583+y)
    ground_tile(208+x, 583+y)
}

template tmpl_sign_oneway(a,b) {
	[      1,     55,     34,     22,    -26,     -9]
	[     36,     55,     34,     22,     -6,    -19]
	[   71+a,     55,     34,     22,    -16,    -14]	  //STOP
	[    106,     55,     34,     22,    -26,    -19]
	[    141,     55,     34,     22,     -6,    - 9]
	[  176+b,     55,     34,     22,    -16,    -14]	  //STOP
	[      1,     78,     34,     22,    -26,     -8]
	[     36,     78,     34,     22,     -6,    -23]
	[   71+a,     78,     34,     22,    -16,    -14]	  //STOP
	[    106,     78,     34,     22,    -26,    -23]
	[    141,     78,     34,     22,     -6,    - 8]
	[  176+b,     78,     34,     22,    -16,    -14]	  //STOP
	[      1,    101,     34,     22,    -26,    -11]
	[     36,    101,     34,     22,     -6,    -16]
	[   71+a,    101,     34,     22,    -16,    -14]	  //STOP
	[    106,    101,     34,     22,    -26,    -16]
	[    141,    101,     34,     22,     -6,    -11]
	[  176+b,    101,     34,     22,    -16,    -14]	  //STOP
}

template tmpl_arrows_oneway(y) {
	[      1,    1+y,     26,     13,    -12,     -7]
	[     28,    1+y,     26,     13,    -12,     -7]
	[     55,    1+y,     26,     13,    -12,     -7] 	  //STOP
	[     82,    1+y,     26,     13,    -12,     -7]
	[    109,    1+y,     26,     13,    -12,     -7]
	[    136,    1+y,     26,     13,    -12,     -7]	  //STOP
	[    163,    1+y,     26,     17,    -12,    -10]
	[    190,    1+y,     26,     17,    -12,    -10]
	[    217,    1+y,     26,     17,    -12,    -10] 	  //STOP
	[    244,    1+y,     26,     17,    -12,    -10]
	[    271,    1+y,     26,     17,    -12,    -10]
	[    298,    1+y,     26,     17,    -12,    -10]  	  //STOP
	[    325,    1+y,     26,     11,    -12,     -5]
	[    352,    1+y,     26,     11,    -12,     -5]
	[    379,    1+y,     26,     11,    -12,     -5] 	  //STOP
	[    406,    1+y,     26,     11,    -12,     -5]
	[    433,    1+y,     26,     11,    -12,     -5]
	[    460,    1+y,     26,     11,    -12,     -5] 	  //STOP
}

template tmpl_arrows_sign_oneway(y,a,b) {
	[      1,    1+y,     26,     13,    -12,     -7]
	[     28,    1+y,     26,     13,    -12,     -7]
	[   71+a,     55,     34,     22,    -16,    -14]     //STOP
	[     82,    1+y,     26,     13,    -12,     -7]
	[    109,    1+y,     26,     13,    -12,     -7]
	[  176+b,     55,     34,     22,    -16,    -14]     //STOP
	[    163,    1+y,     26,     17,    -12,    -10]
	[    190,    1+y,     26,     17,    -12,    -10]
	[   71+a,     78,     34,     22,    -16,    -14]     //STOP
	[    244,    1+y,     26,     17,    -12,    -10]
	[    271,    1+y,     26,     17,    -12,    -10]
	[  176+b,     78,     34,     22,    -16,    -14]     //STOP
	[    325,    1+y,     26,     11,    -12,     -5]
	[    352,    1+y,     26,     11,    -12,     -5]
	[   71+a,    101,     34,     22,    -16,    -14]     //STOP
	[    406,    1+y,     26,     11,    -12,     -5]
	[    433,    1+y,     26,     11,    -12,     -5]
	[  176+b,    101,     34,     22,    -16,    -14]     //STOP
}

template tmpl_gui_icon(x, y) { [x, y, 20, 20, 0, 0]
}
template tmpl_gui_cursor(x, y) { [x, y, 32, 32, 0, 0]
}
template tmpl_gui_gfx() {
    tmpl_gui_icon(  1, 700)
    tmpl_gui_icon( 22, 700)
    tmpl_gui_icon( 43, 700)
    tmpl_gui_icon( 64, 700)
    tmpl_gui_icon( 85, 700)
    tmpl_gui_icon(127, 700)

    tmpl_gui_cursor(  1, 721)
    tmpl_gui_cursor( 34, 721)
    tmpl_gui_cursor( 67, 721)
    tmpl_gui_cursor(100, 721)
    tmpl_gui_cursor(133, 721)
    tmpl_gui_cursor(166, 721)
}

template tmpl_gui_ttd() {
    tmpl_gui_icon(  1, 700)
    tmpl_gui_icon( 22, 700)
    tmpl_gui_icon( 43, 700)
    tmpl_gui_icon( 64, 700)
    tmpl_gui_icon( 85, 700)
    tmpl_gui_icon(106, 700)

    [    1,  754,   64,   36,  -18,  -8]
	[   66,  754,   62,   36,  -16,  -8]
	[  129,  754,   56,   36,    0,   0]
    tmpl_gui_cursor(186, 754)
    tmpl_gui_cursor(219, 754)
    tmpl_gui_cursor(252, 754)
}

template tmpl_UGUI_icon(x, y) { [x, y, 33, 33, 0, 0] }
template tmpl_UGUI_cursor(x, y) { [x, y, 30, 36, 0, 0] }
template tmpl_gui_UGUI() {
    tmpl_UGUI_icon(  1, 791)
    tmpl_UGUI_icon( 35, 791)
    tmpl_UGUI_icon( 69, 791)
    tmpl_UGUI_icon(103, 791)
    tmpl_UGUI_icon(137, 791)
    tmpl_UGUI_icon(171, 791)

    tmpl_UGUI_cursor(  1, 825)
    tmpl_UGUI_cursor( 32, 825)
    tmpl_UGUI_cursor( 63, 825)
    tmpl_UGUI_cursor( 94, 825)
    tmpl_UGUI_cursor(125, 825)
    tmpl_UGUI_cursor(156, 825)
}

template ground_catenary(x, y) { [x, y, 64, 54, -31, -23] }
template tmpl_catenary_combinations() {
    ground_catenary(  1,  1)
    ground_catenary( 66,  1)

	ground_catenary(131,  1)
    ground_catenary(196,  1)
    ground_catenary(261,  1)
    ground_catenary(326,  1)
    ground_catenary(391,  1)
}
template tmpl_catenary_corners() {
    ground_catenary(  1, 58)
    ground_catenary( 66, 58)
	ground_catenary(131, 58)
    ground_catenary(196, 58)
}
template tmpl_catenary_slopes() {
 	[	 261,	56,	  64,	56,	  -31,	-25]
	[	 326,	58,	  64,	46,	  -31,	-23]
	[	 391,	58,	  64,	46,	  -31,	-23]
	[	 456,	56,	  64,	56,	  -31,	-25]
}
template tmpl_catenary_dead_ends() {
    ground_catenary(  1,113)
    ground_catenary( 66,113)
	ground_catenary(131,113)
    ground_catenary(196,113)
}
template tmpl_catenary_tunnels() {
    ground_catenary(261,113)
    ground_catenary(326,113)
    ground_catenary(391,113)
	ground_catenary(456,113)
}
template tmpl_catenary_bridge() {
    ground_catenary(  1,168)
    ground_catenary( 66,168)
	ground_catenary(131,168)
	[    196,  168,	  64,	46,	  -31,	-23]
	[	 261,  168,	  64,	46,	  -31,	-23]
    ground_catenary(326,168)
}
template tmpl_catenary() {
    tmpl_catenary_combinations()
	tmpl_catenary_corners()
	tmpl_catenary_slopes()
	tmpl_catenary_dead_ends()
	tmpl_catenary_tunnels()
    tmpl_catenary_bridge()
}
//==================================================================================================================================
//								SPRITES
//==================================================================================================================================
//===========================================================
//				FIELD ROAD (ORD0)
//===========================================================
spriteset(normal_ORD0_underlay_1, "gfx/R_ORD0.png") {
    tmpl_underlay_overlay(161)
}
spriteset(snow_ORD0_underlay_1, "gfx/R_ORD0.png") {
    tmpl_underlay_overlay(241)
}
switch(FEAT_ROADTYPES, SELF, switch_ORD0_underlay_1, terrain_type) {							//UNDERLAY
    TILETYPE_SNOW: snow_ORD0_underlay_1;
    normal_ORD0_underlay_1;
}

spriteset(normal_ORD0_tunnels_1, "gfx/R_ORD0.png") {
    tmpl_tunnels(0,36)
}
spriteset(snow_ORD0_tunnels_1, "gfx/R_ORD0.png") {
    tmpl_tunnels(276,36)
}
switch(FEAT_ROADTYPES, SELF, switch_ORD0_tunnels_1, terrain_type) {
    TILETYPE_SNOW: snow_ORD0_tunnels_1;
    normal_ORD0_tunnels_1;
}

spriteset(normal_ORD0_bridge, "gfx/R_ORD0.png") {
    tmpl_bridge_surfaces(0)
}
spriteset(snow_ORD0_bridge, "gfx/R_ORD0.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_ROADTYPES, SELF, switch_ORD0_bridge, terrain_type) {								//BRIDGE
    TILETYPE_SNOW: snow_ORD0_bridge;
    normal_ORD0_bridge;
}
//===========================================================
//			DIRT ROAD (ORD2)
//===========================================================
spriteset(normal_ORD2_underlay, "gfx/R_ORD2.png") {
    tmpl_underlay_overlay(1)
}
spriteset(snow_ORD2_underlay, "gfx/R_ORD2.png") {
    tmpl_underlay_overlay(81)
}
switch(FEAT_ROADTYPES, SELF, switch_ORD2_underlay_0, terrain_type) {
    TILETYPE_SNOW: snow_ORD2_underlay;
    normal_ORD2_underlay;
}
switch(FEAT_ROADTYPES, SELF, switch_ORD2_underlay, town_zone) {									//UNDERLAY
	TOWNZONE_EDGE: switch_ORD2_underlay_0;
	switch_ORD0_underlay_1;
}

spriteset(normal_ORD2_depots, "gfx/R_ORD2.png") {
    tmpl_depot(0)
}
spriteset(snow_ORD2_depots, "gfx/R_ORD2.png") {
    tmpl_depot(414)
}
switch(FEAT_ROADTYPES, SELF, switch_ORD2_depots, terrain_type) {								//DEPOT
    TILETYPE_SNOW: snow_ORD2_depots;
    normal_ORD2_depots;
}

spriteset(normal_ORD2_roadstop, "gfx/R_ORD2.png") {
    tmpl_roadstop(0)
}
spriteset(snow_ORD2_roadstop, "gfx/R_ORD2.png") {
    tmpl_roadstop(276)
}
switch(FEAT_ROADTYPES, SELF, switch_ORD2_roadstops, terrain_type) {								//ROADSTOP
    TILETYPE_SNOW: snow_ORD2_roadstop;
    normal_ORD2_roadstop;
}

spriteset(normal_ORD2_tunnels, "gfx/R_ORD2.png") {
    tmpl_tunnels(0,0)
}
spriteset(snow_ORD2_tunnels, "gfx/R_ORD2.png") {
    tmpl_tunnels(276,0)
}
switch(FEAT_ROADTYPES, SELF, switch_ORD2_tunnels_0, terrain_type) {
    TILETYPE_SNOW: snow_ORD2_tunnels;
    normal_ORD2_tunnels;
}
switch(FEAT_ROADTYPES, SELF, switch_ORD2_tunnels, town_zone) {									//TUNNELS
	TOWNZONE_EDGE: switch_ORD2_tunnels_0;
	switch_ORD0_tunnels_1;
}

spriteset(ORD2_gui_UGUI, "gfx/R_ORD2.png") {													//GUI						
    tmpl_gui_UGUI()
}
spriteset(ORD2_gui_opengfx, "gfx/R_ORD2.png") {
    tmpl_gui_gfx()
}
spriteset(ORD2_gui_ttd, "gfx/R_ORD2.png") {
    tmpl_gui_ttd()
}
switch (FEAT_ROADTYPES, SELF, switch_ORD2_gui, param_gui) {										//GUI
    1: ORD2_gui_opengfx;
    2: ORD2_gui_UGUI;
	ORD2_gui_ttd;
}
//===========================================================
//			GRAVEL ROAD (ORD4)
//===========================================================
spriteset(normal_ORD4_underlay_0, "gfx/R_ORD4.png") {
    tmpl_underlay_overlay(1)
}
spriteset(snow_ORD4_underlay_0, "gfx/R_ORD4.png") {
    tmpl_underlay_overlay(81)
}
spriteset(normal_ORD4_underlay_1, "gfx/R_ORD4.png") {
    tmpl_underlay_overlay(161)
}
spriteset(snow_ORD4_underlay_1, "gfx/R_ORD4.png") {
    tmpl_underlay_overlay(241)
}
switch(FEAT_ROADTYPES, SELF, switch_ORD4_underlay_0, terrain_type) {
    TILETYPE_SNOW: snow_ORD4_underlay_0;
    normal_ORD4_underlay_0;
}
switch(FEAT_ROADTYPES, SELF, switch_ORD4_underlay_1, terrain_type) {
    TILETYPE_SNOW: snow_ORD4_underlay_1;
    normal_ORD4_underlay_1;
}
switch(FEAT_ROADTYPES, SELF, switch_ORD4_underlay, town_zone) {									//UNDERLAY TOWNZONE
	TOWNZONE_EDGE: switch_ORD4_underlay_0;
	switch_ORD4_underlay_1;
}

spriteset(normal_ORD4_bridge, "gfx/R_ORD4.png") {
    tmpl_bridge_surfaces(0)
}
spriteset(snow_ORD4_bridge, "gfx/R_ORD4.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_ROADTYPES, SELF, switch_ORD4_bridge, terrain_type) {								//BRIDGE
    TILETYPE_SNOW: snow_ORD4_bridge;
    normal_ORD4_bridge;
}

spriteset(normal_ORD4_depots, "gfx/R_ORD4.png") {
    tmpl_depot(0)
}
spriteset(snow_ORD4_depots, "gfx/R_ORD4.png") {
    tmpl_depot(414)
}
switch(FEAT_ROADTYPES, SELF, switch_ORD4_depots, terrain_type) {								//DEPOT
    TILETYPE_SNOW: snow_ORD4_depots;
    normal_ORD4_depots;
}

spriteset(normal_ORD4_roadstop, "gfx/R_ORD4.png") {
    tmpl_roadstop(0)
}
spriteset(snow_ORD4_roadstop, "gfx/R_ORD4.png") {
    tmpl_roadstop(276)
}
switch(FEAT_ROADTYPES, SELF, switch_ORD4_roadstops, terrain_type) {								//ROADSTOP
    TILETYPE_SNOW: snow_ORD4_roadstop;
    normal_ORD4_roadstop;
}

spriteset(normal_ORD4_tunnels, "gfx/R_ORD4.png") {
    tmpl_tunnels(0,0)
}
spriteset(snow_ORD4_tunnels, "gfx/R_ORD4.png") {
    tmpl_tunnels(276,0)
}
spriteset(normal_ORD4_tunnels_1, "gfx/R_ORD4.png") {
    tmpl_tunnels(0,36)
}
spriteset(snow_ORD4_tunnels_1, "gfx/R_ORD4.png") {
    tmpl_tunnels(276,36)
}
switch(FEAT_ROADTYPES, SELF, switch_ORD4_tunnels_0, terrain_type) {
    TILETYPE_SNOW: snow_ORD4_tunnels;
    normal_ORD4_tunnels;
}
switch(FEAT_ROADTYPES, SELF, switch_ORD4_tunnels_1, terrain_type) {
    TILETYPE_SNOW: snow_ORD4_tunnels_1;
    normal_ORD4_tunnels_1;
}
switch(FEAT_ROADTYPES, SELF, switch_ORD4_tunnels, town_zone) {									//TUNNELS
	TOWNZONE_EDGE: switch_ORD4_tunnels_0;
	switch_ORD4_tunnels_1;
}

spriteset(ORD4_gui_UGUI, "gfx/R_ORD4.png") {													//GUI						
    tmpl_gui_UGUI()
}
spriteset(ORD4_gui_opengfx, "gfx/R_ORD4.png") {
    tmpl_gui_gfx()
}
spriteset(ORD4_gui_ttd, "gfx/R_ORD4.png") {
    tmpl_gui_ttd()
}
switch (FEAT_ROADTYPES, SELF, switch_ORD4_gui, param_gui) {										//GUI
    1: ORD4_gui_opengfx;
    2: ORD4_gui_UGUI;
	ORD4_gui_ttd;
}
//===========================================================
//				CEMENT CONCRETE ROAD (SRD1)
//===========================================================
spriteset(normal_SRD1_underlay_0, "gfx/R_SRD1.png") {
    tmpl_underlay_overlay(1)
}
spriteset(snow_SRD1_underlay_0, "gfx/R_SRD1.png") {
    tmpl_underlay_overlay(81)
}
spriteset(normal_SRD1_underlay_1, "gfx/R_SRD1.png") {
    tmpl_underlay_overlay(161)
}
spriteset(snow_SRD1_underlay_1, "gfx/R_SRD1.png") {
    tmpl_underlay_overlay(241)
}
switch(FEAT_ROADTYPES, SELF, switch_SRD1_underlay_0, terrain_type) {
    TILETYPE_SNOW: snow_SRD1_underlay_0;
    normal_SRD1_underlay_0;
}
switch(FEAT_ROADTYPES, SELF, switch_SRD1_underlay_1, terrain_type) {
    TILETYPE_SNOW: snow_SRD1_underlay_1;
    normal_SRD1_underlay_1;
}
switch(FEAT_ROADTYPES, SELF, switch_SRD1_underlay, town_zone) {									//UNDERLAY TOWNZONE
	TOWNZONE_EDGE: switch_SRD1_underlay_0;
	switch_SRD1_underlay_1;
}

spriteset(normal_SRD1_bridge, "gfx/R_SRD1.png") {
    tmpl_bridge_surfaces(0)
}
spriteset(snow_SRD1_bridge, "gfx/R_SRD1.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_ROADTYPES, SELF, switch_SRD1_bridge, terrain_type) {								//BRIDGE
    TILETYPE_SNOW: snow_SRD1_bridge;
    normal_SRD1_bridge;
}

spriteset(normal_SRD1_depots, "gfx/R_SRD1.png") {
    tmpl_depot(0)
}
spriteset(snow_SRD1_depots, "gfx/R_SRD1.png") {
    tmpl_depot(414)
}
switch(FEAT_ROADTYPES, SELF, switch_SRD1_depots, terrain_type) {								//DEPOT
    TILETYPE_SNOW: snow_SRD1_depots;
    normal_SRD1_depots;
}

spriteset(normal_SRD1_roadstop, "gfx/R_SRD1.png") {
    tmpl_roadstop(0)
}
spriteset(snow_SRD1_roadstop, "gfx/R_SRD1.png") {
    tmpl_roadstop(276)
}
switch(FEAT_ROADTYPES, SELF, switch_SRD1_roadstops, terrain_type) {								//ROADSTOP
    TILETYPE_SNOW: snow_SRD1_roadstop;
    normal_SRD1_roadstop;
}

spriteset(normal_SRD1_tunnels, "gfx/R_SRD1.png") {
    tmpl_tunnels(0,0)
}
spriteset(snow_SRD1_tunnels, "gfx/R_SRD1.png") {
    tmpl_tunnels(276,0)
}
spriteset(normal_SRD1_tunnels_1, "gfx/R_SRD1.png") {
    tmpl_tunnels(0,36)
}
spriteset(snow_SRD1_tunnels_1, "gfx/R_SRD1.png") {
    tmpl_tunnels(276,36)
}
switch(FEAT_ROADTYPES, SELF, switch_SRD1_tunnels_0, terrain_type) {
    TILETYPE_SNOW: snow_SRD1_tunnels;
    normal_SRD1_tunnels;
}
switch(FEAT_ROADTYPES, SELF, switch_SRD1_tunnels_1, terrain_type) {
    TILETYPE_SNOW: snow_SRD1_tunnels_1;
    normal_SRD1_tunnels_1;
}
switch(FEAT_ROADTYPES, SELF, switch_SRD1_tunnels, town_zone) {									//TUNNELS
	TOWNZONE_EDGE: switch_SRD1_tunnels_0;
	switch_SRD1_tunnels_1;
}

spriteset(SRD1_gui_UGUI, "gfx/R_SRD1.png") {													//GUI						
    tmpl_gui_UGUI()
}
spriteset(SRD1_gui_opengfx, "gfx/R_SRD1.png") {
    tmpl_gui_gfx()
}
spriteset(SRD1_gui_ttd, "gfx/R_SRD1.png") {
    tmpl_gui_ttd()
}
switch (FEAT_ROADTYPES, SELF, switch_SRD1_gui, param_gui) {										//GUI
    1: SRD1_gui_opengfx;
    2: SRD1_gui_UGUI;
	SRD1_gui_ttd;
}
//===========================================================
//			ASPHALT ROAD (ARD0)
//===========================================================
spriteset(normal_ARD0_underlay, "gfx/R_ARD0.png") {
    tmpl_underlay_overlay(1)
}
spriteset(snow_ARD0_underlay, "gfx/R_ARD0.png") {
    tmpl_underlay_overlay(81)
}
switch(FEAT_ROADTYPES, SELF, switch_ARD0_underlay, terrain_type) {								//UNDERLAY
    TILETYPE_SNOW: snow_ARD0_underlay;
    normal_ARD0_underlay;
}

spriteset(normal_ARD0_bridge, "gfx/R_ARD0.png") {
    tmpl_bridge_surfaces(0)
}
spriteset(snow_ARD0_bridge, "gfx/R_ARD0.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_ROADTYPES, SELF, switch_ARD0_bridge, terrain_type) {								//BRIDGE
    TILETYPE_SNOW: snow_ARD0_bridge;
    normal_ARD0_bridge;
}

spriteset(normal_ARD0_depots, "gfx/R_ARD0.png") {
    tmpl_depot(0)
}
spriteset(snow_ARD0_depots, "gfx/R_ARD0.png") {
    tmpl_depot(414)
}
switch(FEAT_ROADTYPES, SELF, switch_ARD0_depots, terrain_type) {								//DEPOT
    TILETYPE_SNOW: snow_ARD0_depots;
    normal_ARD0_depots;
}

spriteset(normal_ARD0_roadstop, "gfx/R_ARD0.png") {
    tmpl_roadstop(0)
}
spriteset(snow_ARD0_roadstop, "gfx/R_ARD0.png") {
    tmpl_roadstop(276)
}
switch(FEAT_ROADTYPES, SELF, switch_ARD0_roadstops, terrain_type) {								//ROADSTOP
    TILETYPE_SNOW: snow_ARD0_roadstop;
    normal_ARD0_roadstop;
}

spriteset(normal_ARD0_tunnels, "gfx/R_ARD0.png") {
    tmpl_tunnels(0,0)
}
spriteset(snow_ARD0_tunnels, "gfx/R_ARD0.png") {
    tmpl_tunnels(276,0)
}
spriteset(normal_ARD0_tunnels_1, "gfx/R_ARD0.png") {
    tmpl_tunnels(0,36)
}
spriteset(snow_ARD0_tunnels_1, "gfx/R_ARD0.png") {
    tmpl_tunnels(276,36)
}
switch(FEAT_ROADTYPES, SELF, switch_ARD0_tunnels_0, terrain_type) {
    TILETYPE_SNOW: snow_ARD0_tunnels;
    normal_ARD0_tunnels;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD0_tunnels_1, terrain_type) {
    TILETYPE_SNOW: snow_ARD0_tunnels_1;
    normal_ARD0_tunnels_1;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD0_tunnels, town_zone) {									//TUNNELS
	TOWNZONE_EDGE: switch_ARD0_tunnels_0;
	switch_ARD0_tunnels_1;
}

spriteset(ARD0_gui_UGUI, "gfx/R_ARD0.png") {													//GUI						
    tmpl_gui_UGUI()
}
spriteset(ARD0_gui_opengfx, "gfx/R_ARD0.png") {
    tmpl_gui_gfx()
}
spriteset(ARD0_gui_ttd, "gfx/R_ARD0.png") {
    tmpl_gui_ttd()
}
switch (FEAT_ROADTYPES, SELF, switch_ARD0_gui, param_gui) {										//GUI
    1: ARD0_gui_opengfx;
    2: ARD0_gui_UGUI;
	ARD0_gui_ttd;
}
//===========================================================
//			IMPROVED ASPHALT ROAD /W STRIPES (ARD3)
//===========================================================
spriteset(normal_ARD3_underlay_0, "gfx/R_ARD3.png") {
    tmpl_underlay_overlay(1)
}
spriteset(snow_ARD3_underlay_0, "gfx/R_ARD3.png") {
    tmpl_underlay_overlay(81)
}
spriteset(normal_ARD3_underlay_1, "gfx/R_ARD3.png") {
    tmpl_underlay_overlay(161)
}
spriteset(snow_ARD3_underlay_1, "gfx/R_ARD3.png") {
    tmpl_underlay_overlay(241)
}
spriteset(normal_ARD3_underlay_A_0, "gfx/R_ARD3_A.png") {
    tmpl_underlay_overlay(1)
}
spriteset(snow_ARD3_underlay_A_0, "gfx/R_ARD3_A.png") {
    tmpl_underlay_overlay(81)
}
spriteset(normal_ARD3_underlay_A_1, "gfx/R_ARD3_A.png") {
    tmpl_underlay_overlay(161)
}
spriteset(snow_ARD3_underlay_A_1, "gfx/R_ARD3_A.png") {
    tmpl_underlay_overlay(241)
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_underlay_0, terrain_type) {
    TILETYPE_SNOW: snow_ARD3_underlay_0;
    normal_ARD3_underlay_0;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_underlay_1, terrain_type) {
    TILETYPE_SNOW: snow_ARD3_underlay_1;
    normal_ARD3_underlay_1;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_underlay_A_0, terrain_type) {
    TILETYPE_SNOW: snow_ARD3_underlay_A_0;
    normal_ARD3_underlay_A_0;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_underlay_A_1, terrain_type) {
    TILETYPE_SNOW: snow_ARD3_underlay_A_1;
    normal_ARD3_underlay_A_1;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_underlay_style_0, param_style) {						//UNDERLAY
	1: switch_ARD3_underlay_A_0;
	switch_ARD3_underlay_0;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_underlay_style_1, param_style) {						//UNDERLAY
	1: switch_ARD3_underlay_A_1;
	switch_ARD3_underlay_1;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_underlay, town_zone) {									//UNDERLAY
	TOWNZONE_EDGE: switch_ARD3_underlay_style_0;
	switch_ARD3_underlay_style_1;
}

spriteset(normal_ARD3_bridge, "gfx/R_ARD3.png") {
    tmpl_bridge_surfaces(0)
}
spriteset(snow_ARD3_bridge, "gfx/R_ARD3.png") {
    tmpl_bridge_surfaces(414)
}
spriteset(normal_ARD3_bridge_A, "gfx/R_ARD3_A.png") {
    tmpl_bridge_surfaces(0)
}
spriteset(snow_ARD3_bridge_A, "gfx/R_ARD3_A.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_bridge, terrain_type) {
    TILETYPE_SNOW: snow_ARD3_bridge;
    normal_ARD3_bridge;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_bridge_A, terrain_type) {
    TILETYPE_SNOW: snow_ARD3_bridge_A;
    normal_ARD3_bridge_A;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_bridge_style, param_style) {							//BRIDGE
	1:	switch_ARD3_bridge_A;
	switch_ARD3_bridge;
}

spriteset(normal_ARD3_depots, "gfx/R_ARD3.png") {
    tmpl_depot(0)
}
spriteset(snow_ARD3_depots, "gfx/R_ARD3.png") {
    tmpl_depot(414)
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_depots, terrain_type) {								//DEPOT
    TILETYPE_SNOW: snow_ARD3_depots;
    normal_ARD3_depots;
}

spriteset(normal_ARD3_roadstop, "gfx/R_ARD3.png") {
    tmpl_roadstop(0)
}
spriteset(snow_ARD3_roadstop, "gfx/R_ARD3.png") {
    tmpl_roadstop(276)
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_roadstops, terrain_type) {								//ROADSTOP
    TILETYPE_SNOW: snow_ARD3_roadstop;
    normal_ARD3_roadstop;
}

spriteset(normal_ARD3_tunnels_A_0, "gfx/R_ARD3_A.png") {
    tmpl_tunnels(0,0)
}
spriteset(snow_ARD3_tunnels_A_0, "gfx/R_ARD3_A.png") {
    tmpl_tunnels(276,0)
}
spriteset(normal_ARD3_tunnels_A_1, "gfx/R_ARD3_A.png") {
    tmpl_tunnels(0,36)
}
spriteset(snow_ARD3_tunnels_A_1, "gfx/R_ARD3_A.png") {
    tmpl_tunnels(276,36)
}
spriteset(normal_ARD3_tunnels_0, "gfx/R_ARD3.png") {
    tmpl_tunnels(0,0)
}
spriteset(snow_ARD3_tunnels_0, "gfx/R_ARD3.png") {
    tmpl_tunnels(276,0)
}
spriteset(normal_ARD3_tunnels_1, "gfx/R_ARD3.png") {
    tmpl_tunnels(0,36)
}
spriteset(snow_ARD3_tunnels_1, "gfx/R_ARD3.png") {
    tmpl_tunnels(276,36)
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_tunnels_A_0, terrain_type) {
    TILETYPE_SNOW: snow_ARD3_tunnels_A_0;
    normal_ARD3_tunnels_A_0;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_tunnels_A_1, terrain_type) {
    TILETYPE_SNOW: snow_ARD3_tunnels_A_1;
    normal_ARD3_tunnels_A_1;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_tunnels_0, terrain_type) {
    TILETYPE_SNOW: snow_ARD3_tunnels_0;
    normal_ARD3_tunnels_0;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_tunnels_1, terrain_type) {
    TILETYPE_SNOW: snow_ARD3_tunnels_1;
    normal_ARD3_tunnels_1;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_tunnels_style_0, param_style ) {						//TUNNELS
	1: switch_ARD3_tunnels_A_0;
	switch_ARD3_tunnels_0;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_tunnels_style_1, param_style ) {						//TUNNELS
	1: switch_ARD3_tunnels_A_1;
	switch_ARD3_tunnels_1;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_tunnels, town_zone) {									//TUNNELS
	TOWNZONE_EDGE: switch_ARD3_tunnels_style_0;
	switch_ARD3_tunnels_style_1;
}

spriteset(ARD3_gui_UGUI, "gfx/R_ARD3.png") {													//GUI						
    tmpl_gui_UGUI()
}
spriteset(ARD3_gui_opengfx, "gfx/R_ARD3.png") {
    tmpl_gui_gfx()
}
spriteset(ARD3_gui_ttd, "gfx/R_ARD3.png") {
    tmpl_gui_ttd()
}
spriteset(ARD3_gui_UGUI_A, "gfx/R_ARD3_A.png") {												//GUI						
    tmpl_gui_UGUI()
}
spriteset(ARD3_gui_opengfx_A, "gfx/R_ARD3_A.png") {
    tmpl_gui_gfx()
}
spriteset(ARD3_gui_ttd_A, "gfx/R_ARD3_A.png") {
    tmpl_gui_ttd()
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_gui_ttd, param_style) {
	1: ARD3_gui_ttd_A;
	ARD3_gui_ttd;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_gui_opengfx, param_style) {
	1: ARD3_gui_opengfx_A;
	ARD3_gui_opengfx;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD3_gui_UGUI, param_style) {
	1: ARD3_gui_UGUI_A;
	ARD3_gui_UGUI;
}
switch (FEAT_ROADTYPES, SELF, switch_ARD3_gui, param_gui) {										//GUI
    1: switch_ARD3_gui_opengfx;
    2: switch_ARD3_gui_UGUI;
	switch_ARD3_gui_ttd;
}
//===========================================================
//		ASPHALT ROAD W/ LINE AND STRIPES (ARD5)													//TRAFFIC_SIDE_LEFT
//===========================================================
spriteset(normal_left_ARD5_underlay_0, "gfx/R_ARD5_1.png") {
    tmpl_underlay_overlay(1)
}
spriteset(snow_left_ARD5_underlay_0, "gfx/R_ARD5_1.png") {
    tmpl_underlay_overlay(81)
}
spriteset(normal_left_ARD5_underlay_1, "gfx/R_ARD5_1.png") {
    tmpl_underlay_overlay(161)
}
spriteset(snow_left_ARD5_underlay_1, "gfx/R_ARD5_1.png") {
    tmpl_underlay_overlay(241)
}
spriteset(normal_left_ARD5_underlay_A_0, "gfx/R_ARD5_1_A.png") {
    tmpl_underlay_overlay(1)
}
spriteset(snow_left_ARD5_underlay_A_0, "gfx/R_ARD5_1_A.png") {
    tmpl_underlay_overlay(81)
}
spriteset(normal_left_ARD5_underlay_A_1, "gfx/R_ARD5_1_A.png") {
    tmpl_underlay_overlay(161)
}
spriteset(snow_left_ARD5_underlay_A_1, "gfx/R_ARD5_1_A.png") {
    tmpl_underlay_overlay(241)
}
switch(FEAT_ROADTYPES, SELF, left_ARD5_underlay_0, terrain_type) {
    TILETYPE_SNOW: snow_left_ARD5_underlay_0;
    normal_left_ARD5_underlay_0;
}
switch(FEAT_ROADTYPES, SELF, left_ARD5_underlay_1, terrain_type) {
    TILETYPE_SNOW: snow_left_ARD5_underlay_1;
    normal_left_ARD5_underlay_1;
}
switch(FEAT_ROADTYPES, SELF, left_ARD5_underlay_A_0, terrain_type) {
    TILETYPE_SNOW: snow_left_ARD5_underlay_A_0;
    normal_left_ARD5_underlay_A_0;
}
switch(FEAT_ROADTYPES, SELF, left_ARD5_underlay_A_1, terrain_type) {
    TILETYPE_SNOW: snow_left_ARD5_underlay_A_1;
    normal_left_ARD5_underlay_A_1;
}
switch(FEAT_ROADTYPES, SELF, left_ARD5_underlay_style_0, param_style) {
	1: left_ARD5_underlay_A_0;
	left_ARD5_underlay_0;
}
switch(FEAT_ROADTYPES, SELF, left_ARD5_underlay_style_1, param_style) {
	1: left_ARD5_underlay_A_1;
	left_ARD5_underlay_1;
}

spriteset(normal_left_ARD5_bridge, "gfx/R_ARD5_1.png") {
    tmpl_bridge_surfaces(0)
}
spriteset(snow_left_ARD5_bridge, "gfx/R_ARD5_1.png") {
    tmpl_bridge_surfaces(414)
}
spriteset(normal_left_ARD5_bridge_A, "gfx/R_ARD5_1_A.png") {
    tmpl_bridge_surfaces(0)
}
spriteset(snow_left_ARD5_bridge_A, "gfx/R_ARD5_1_A.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_ROADTYPES, SELF, left_ARD5_bridge, terrain_type) {									//BRIDGE LEFT
    TILETYPE_SNOW: snow_left_ARD5_bridge;
    normal_left_ARD5_bridge;
}
switch(FEAT_ROADTYPES, SELF, left_ARD5_bridge_A, terrain_type) {								//BRIDGE LEFT
    TILETYPE_SNOW: snow_left_ARD5_bridge_A;
    normal_left_ARD5_bridge_A;
}
//===========================================================
//			ASPHALT ROAD W/ LINE AND STRIPES (ARD5)
//===========================================================
spriteset(normal_right_ARD5_underlay_0, "gfx/R_ARD5.png") {
    tmpl_underlay_overlay(1)
}
spriteset(snow_right_ARD5_underlay_0, "gfx/R_ARD5.png") {
    tmpl_underlay_overlay(81)
}
spriteset(normal_right_ARD5_underlay_1, "gfx/R_ARD5.png") {
    tmpl_underlay_overlay(161)
}
spriteset(snow_right_ARD5_underlay_1, "gfx/R_ARD5.png") {
    tmpl_underlay_overlay(241)
}
spriteset(normal_right_ARD5_underlay_A_0, "gfx/R_ARD5_A.png") {
    tmpl_underlay_overlay(1)
}
spriteset(snow_right_ARD5_underlay_A_0, "gfx/R_ARD5_A.png") {
    tmpl_underlay_overlay(81)
}
spriteset(normal_right_ARD5_underlay_A_1, "gfx/R_ARD5_A.png") {
    tmpl_underlay_overlay(161)
}
spriteset(snow_right_ARD5_underlay_A_1, "gfx/R_ARD5_A.png") {
    tmpl_underlay_overlay(241)
}
switch(FEAT_ROADTYPES, SELF, right_ARD5_underlay_0, terrain_type) {
    TILETYPE_SNOW: snow_right_ARD5_underlay_0;
    normal_right_ARD5_underlay_0;
}
switch(FEAT_ROADTYPES, SELF, right_ARD5_underlay_1, terrain_type) {
    TILETYPE_SNOW: snow_right_ARD5_underlay_1;
    normal_right_ARD5_underlay_1;
}
switch(FEAT_ROADTYPES, SELF, right_ARD5_underlay_A_0, terrain_type) {
    TILETYPE_SNOW: snow_right_ARD5_underlay_A_0;
    normal_right_ARD5_underlay_A_0;
}
switch(FEAT_ROADTYPES, SELF, right_ARD5_underlay_A_1, terrain_type) {
    TILETYPE_SNOW: snow_right_ARD5_underlay_A_1;
    normal_right_ARD5_underlay_A_1;
}
switch(FEAT_ROADTYPES, SELF, right_ARD5_underlay_style_0, param_style) {
	1: right_ARD5_underlay_A_0;
	right_ARD5_underlay_0;
}
switch(FEAT_ROADTYPES, SELF, right_ARD5_underlay_style_1, param_style) {
	1: right_ARD5_underlay_A_1;
	right_ARD5_underlay_1;
}
switch(FEAT_ROADTYPES, SELF, traffic_side_ARD5_underlay_0, traffic_side) {						// UNDERLAY  TRAFFIC_SIDE
	TRAFFIC_SIDE_LEFT: left_ARD5_underlay_style_0;
	right_ARD5_underlay_style_0;
}
switch(FEAT_ROADTYPES, SELF, traffic_side_ARD5_underlay_1, traffic_side) {						// UNDERLAY  TRAFFIC_SIDE
	TRAFFIC_SIDE_LEFT: left_ARD5_underlay_style_1;
	right_ARD5_underlay_style_1;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD5_underlay, town_zone) {									//UNDERLAY TOWNZONE
	TOWNZONE_EDGE: traffic_side_ARD5_underlay_0;
	traffic_side_ARD5_underlay_1;
}

spriteset(normal_right_ARD5_bridge, "gfx/R_ARD5.png") {
    tmpl_bridge_surfaces(0)
}
spriteset(snow_right_ARD5_bridge, "gfx/R_ARD5.png") {
    tmpl_bridge_surfaces(414)
}
spriteset(normal_right_ARD5_bridge_A, "gfx/R_ARD5_A.png") {
    tmpl_bridge_surfaces(0)
}
spriteset(snow_right_ARD5_bridge_A, "gfx/R_ARD5_A.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_ROADTYPES, SELF, right_ARD5_bridge, terrain_type) {
    TILETYPE_SNOW: snow_right_ARD5_bridge;
    normal_right_ARD5_bridge;
}
switch(FEAT_ROADTYPES, SELF, right_ARD5_bridge_A, terrain_type) {
    TILETYPE_SNOW: snow_right_ARD5_bridge_A;
    normal_right_ARD5_bridge_A;
}
switch(FEAT_ROADTYPES, SELF, left_ARD5_bridge_style, param_style) {
	1: left_ARD5_bridge_A;
	left_ARD5_bridge;
}
switch(FEAT_ROADTYPES, SELF, right_ARD5_bridge_style, param_style) {
	1: right_ARD5_bridge_A;
	right_ARD5_bridge;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD5_bridge, traffic_side) {								//BRIDGE TRAFFIC_SIDE
	TRAFFIC_SIDE_LEFT: left_ARD5_bridge_style;
	right_ARD5_bridge_style;
}

spriteset(normal_ARD5_depots, "gfx/R_ARD5.png") {
    tmpl_depot(0)
}
spriteset(snow_ARD5_depots, "gfx/R_ARD5.png") {
    tmpl_depot(414)
}
switch(FEAT_ROADTYPES, SELF, switch_ARD5_depots, terrain_type) {								//DEPOT
    TILETYPE_SNOW: snow_ARD5_depots;
    normal_ARD5_depots;
}

spriteset(normal_ARD5_roadstop, "gfx/R_ARD5.png") {
    tmpl_roadstop(0)
}
spriteset(snow_ARD5_roadstop, "gfx/R_ARD5.png") {
    tmpl_roadstop(276)
}
switch(FEAT_ROADTYPES, SELF, switch_ARD5_roadstops, terrain_type) {								//ROADSTOP
    TILETYPE_SNOW: snow_ARD5_roadstop;
    normal_ARD5_roadstop;
}

spriteset(normal_ARD5_tunnels_A_0, "gfx/R_ARD5_A.png") {
    tmpl_tunnels(0,0)
}
spriteset(snow_ARD5_tunnels_A_0, "gfx/R_ARD5_A.png") {
    tmpl_tunnels(276,0)
}
spriteset(normal_ARD5_tunnels_A_1, "gfx/R_ARD5_A.png") {
    tmpl_tunnels(0,36)
}
spriteset(snow_ARD5_tunnels_A_1, "gfx/R_ARD5_A.png") {
    tmpl_tunnels(276,36)
}
spriteset(normal_ARD5_tunnels_0, "gfx/R_ARD5.png") {
    tmpl_tunnels(0,0)
}
spriteset(snow_ARD5_tunnels_0, "gfx/R_ARD5.png") {
    tmpl_tunnels(276,0)
}
spriteset(normal_ARD5_tunnels_1, "gfx/R_ARD5.png") {
    tmpl_tunnels(0,36)
}
spriteset(snow_ARD5_tunnels_1, "gfx/R_ARD5.png") {
    tmpl_tunnels(276,36)
}
switch(FEAT_ROADTYPES, SELF, switch_ARD5_tunnels_A_0, terrain_type) {
    TILETYPE_SNOW: snow_ARD5_tunnels_A_0;
    normal_ARD5_tunnels_A_0;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD5_tunnels_A_1, terrain_type) {
    TILETYPE_SNOW: snow_ARD5_tunnels_A_1;
    normal_ARD5_tunnels_A_1;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD5_tunnels_0, terrain_type) {
    TILETYPE_SNOW: snow_ARD5_tunnels_0;
    normal_ARD5_tunnels_0;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD5_tunnels_1, terrain_type) {
    TILETYPE_SNOW: snow_ARD5_tunnels_1;
    normal_ARD5_tunnels_1;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD5_tunnels_style_0, param_style ) {						//TUNNELS
	1: switch_ARD5_tunnels_A_0;
	switch_ARD5_tunnels_0;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD5_tunnels_style_1, param_style ) {						//TUNNELS
	1: switch_ARD5_tunnels_A_1;
	switch_ARD5_tunnels_1;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD5_tunnels, town_zone) {									//TUNNELS
	TOWNZONE_EDGE: switch_ARD5_tunnels_style_0;
	switch_ARD5_tunnels_style_1;
}

spriteset(ARD5_gui_UGUI, "gfx/R_ARD5.png") {													//GUI						
    tmpl_gui_UGUI()
}
spriteset(ARD5_gui_opengfx, "gfx/R_ARD5.png") {
    tmpl_gui_gfx()
}
spriteset(ARD5_gui_ttd, "gfx/R_ARD5.png") {
    tmpl_gui_ttd()
}
spriteset(ARD5_gui_UGUI_A, "gfx/R_ARD5_A.png") {												//GUI						
    tmpl_gui_UGUI()
}
spriteset(ARD5_gui_opengfx_A, "gfx/R_ARD5_A.png") {
    tmpl_gui_gfx()
}
spriteset(ARD5_gui_ttd_A, "gfx/R_ARD5_A.png") {
    tmpl_gui_ttd()
}
switch(FEAT_ROADTYPES, SELF, switch_ARD5_gui_ttd, param_style) {
	1: ARD5_gui_ttd_A;
	ARD5_gui_ttd;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD5_gui_opengfx, param_style) {
	1: ARD5_gui_opengfx_A;
	ARD5_gui_opengfx;
}
switch(FEAT_ROADTYPES, SELF, switch_ARD5_gui_UGUI, param_style) {
	1: ARD5_gui_UGUI_A;
	ARD5_gui_UGUI;
}
switch (FEAT_ROADTYPES, SELF, switch_ARD5_gui, param_gui) {										//GUI
    1: switch_ARD5_gui_opengfx;
    2: switch_ARD5_gui_UGUI;
	switch_ARD5_gui_ttd;
}
//===========================================================
//			 	EXPRESSWAY (WRD1)
//===========================================================
spriteset(normal_right_WRD1_underlay, "gfx/R_WRD1.png") {
    tmpl_underlay_overlay(1)
}
spriteset(snow_right_WRD1_underlay, "gfx/R_WRD1.png") {
    tmpl_underlay_overlay(81)
}
spriteset(normal_left_WRD1_ubderlay, "gfx/R_WRD1.png") {
    tmpl_underlay_overlay(161)
}
spriteset(snow_left_WRD1_ubderlay, "gfx/R_WRD1.png") {
    tmpl_underlay_overlay(241)
}
switch(FEAT_ROADTYPES, SELF, switch_right_WRD1_underlay, terrain_type) {
    TILETYPE_SNOW: snow_right_WRD1_underlay;
    normal_right_WRD1_underlay;
}
switch(FEAT_ROADTYPES, SELF, switch_left_WRD1_ubderlay, terrain_type) {
    TILETYPE_SNOW: snow_left_WRD1_ubderlay;
    normal_left_WRD1_ubderlay;
}
switch(FEAT_ROADTYPES, SELF, switch_WRD1_underlay, traffic_side) {								//UNDERLAY TRAFFIC_SIDE
	TRAFFIC_SIDE_LEFT: switch_left_WRD1_ubderlay;
	switch_right_WRD1_underlay;
}

spriteset(normal_WRD1_bridge, "gfx/R_WRD1.png") {
    tmpl_bridge_surfaces(0)
}
spriteset(snow_WRD1_bridge, "gfx/R_WRD1.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_ROADTYPES, SELF, switch_WRD1_bridge, terrain_type) {								//BRIDGE
    TILETYPE_SNOW: snow_WRD1_bridge;
    normal_WRD1_bridge;
}

spriteset(normal_WRD1_depots, "gfx/R_WRD1.png") {
    tmpl_depot(0)
}
spriteset(snow_WRD1_depots, "gfx/R_WRD1.png") {
    tmpl_depot(414)
}
switch(FEAT_ROADTYPES, SELF, switch_WRD1_depots, terrain_type) {								//DEPOT
    TILETYPE_SNOW: snow_WRD1_depots;
    normal_WRD1_depots;
}

spriteset(normal_WRD1_roadstop, "gfx/R_WRD1.png") {
    tmpl_roadstop(0)
}
spriteset(snow_WRD1_roadstop, "gfx/R_WRD1.png") {
    tmpl_roadstop(276)
}
switch(FEAT_ROADTYPES, SELF, switch_WRD1_roadstops, terrain_type) {								//ROADSTOP
    TILETYPE_SNOW: snow_WRD1_roadstop;
    normal_WRD1_roadstop;
}

spriteset(normal_WRD1_tunnels, "gfx/R_WRD1.png") {
	tmpl_tunnels(0,0)
}
spriteset(snow_WRD1_tunnels, "gfx/R_WRD1.png") {
	tmpl_tunnels(276,0)
}
switch(FEAT_ROADTYPES, SELF, switch_WRD1_tunnels, terrain_type) {								//TUNNELS
	TILETYPE_SNOW: snow_WRD1_tunnels;
	normal_WRD1_tunnels;
}

spriteset(WRD1_gui_UGUI, "gfx/R_WRD1.png") {													//GUI						
    tmpl_gui_UGUI()
}
spriteset(WRD1_gui_opengfx, "gfx/R_WRD1.png") {
    tmpl_gui_gfx()
}
spriteset(WRD1_gui_ttd, "gfx/R_WRD1.png") {
    tmpl_gui_ttd()
}
switch (FEAT_ROADTYPES, SELF, switch_WRD1_gui, param_gui) {										//GUI
    1: WRD1_gui_opengfx;
    2: WRD1_gui_UGUI;
	WRD1_gui_ttd;
}
//===========================================================
//			ISR ROAD (DRD3)
//===========================================================
spriteset(switch_DRD3_underlay, "gfx/R_DRD3.png") {
    tmpl_underlay_overlay(1)
}
spriteset(normal_DRD3_bridge, "gfx/R_DRD3.png") {
    tmpl_bridge_surfaces(0)
}
spriteset(snow_DRD3_bridge, "gfx/R_DRD3.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_ROADTYPES, SELF, switch_DRD3_bridge, terrain_type) {								//BRIDGE
    TILETYPE_SNOW: snow_DRD3_bridge;
    normal_DRD3_bridge;
}

spriteset(normal_DRD3_depots, "gfx/R_DRD3.png") {
    tmpl_depot(0)
}
spriteset(snow_DRD3_depots, "gfx/R_DRD3.png") {
    tmpl_depot(414)
}
switch(FEAT_ROADTYPES, SELF, switch_DRD3_depots, terrain_type) {								//DEPOT
    TILETYPE_SNOW: snow_DRD3_depots;
    normal_DRD3_depots;
}

spriteset(normal_DRD3_roadstop, "gfx/R_DRD3.png") {
    tmpl_roadstop(0)
}
spriteset(snow_DRD3_roadstop, "gfx/R_DRD3.png") {
    tmpl_roadstop(276)
}
switch(FEAT_ROADTYPES, SELF, switch_DRD3_roadstops, terrain_type) {								//ROADSTOP
    TILETYPE_SNOW: snow_DRD3_roadstop;
    normal_DRD3_roadstop;
}

spriteset(switch_DRD3_tunnels, "gfx/R_DRD3.png") {												//TUNNELS
    tmpl_tunnels(0,0)
}

spriteset(DRD3_gui_UGUI, "gfx/R_DRD3.png") {													//GUI						
    tmpl_gui_UGUI()
}
spriteset(DRD3_gui_opengfx, "gfx/R_DRD3.png") {
    tmpl_gui_gfx()
}
spriteset(DRD3_gui_ttd, "gfx/R_DRD3.png") {
    tmpl_gui_ttd()
}
switch (FEAT_ROADTYPES, SELF, switch_DRD3_gui, param_gui) {										//GUI
    1: DRD3_gui_opengfx;
    2: DRD3_gui_UGUI;
	DRD3_gui_ttd;
}
//===========================================================
//				ASPHALT ROAD (ELECTRIFIED) (AER0)
//===========================================================
spriteset(AER0_depots, "gfx/R_AER0.png") {
    tmpl_depot(0)
}
spriteset(AER0_snow_depots, "gfx/R_AER0.png") {
    tmpl_depot(414)
}
switch(FEAT_ROADTYPES, SELF, switch_AER0_depots, terrain_type) {								//DEPOT
    TILETYPE_SNOW: AER0_snow_depots;
    AER0_depots;
}

spriteset(AER0_gui_UGUI, "gfx/R_AER0.png") {													//GUI						
    tmpl_gui_UGUI()
}
spriteset(AER0_gui_opengfx, "gfx/R_AER0.png") {
    tmpl_gui_gfx()
}
spriteset(AER0_gui_ttd, "gfx/R_AER0.png") {
    tmpl_gui_ttd()
}
switch (FEAT_ROADTYPES, SELF, switch_AER0_gui, param_gui) {										//GUI
    1: AER0_gui_opengfx;
    2: AER0_gui_UGUI;
	AER0_gui_ttd;
}
//===========================================================
//		IMPROVED ASPHALT ROAD W/ STRIPES (ELECTRIFIED) (AER3)
//===========================================================
spriteset(AER3_depots, "gfx/R_AER3.png") {
    tmpl_depot(0)
}
spriteset(AER3_snow_depots, "gfx/R_AER3.png") {
    tmpl_depot(414)
}
switch(FEAT_ROADTYPES, SELF, switch_AER3_depots, terrain_type) {								//DEPOT
    TILETYPE_SNOW: AER3_snow_depots;
    AER3_depots;
}

spriteset(AER3_gui_UGUI, "gfx/R_AER3.png") {													//GUI						
    tmpl_gui_UGUI()
}
spriteset(AER3_gui_opengfx, "gfx/R_AER3.png") {
    tmpl_gui_gfx()
}
spriteset(AER3_gui_ttd, "gfx/R_AER3.png") {
    tmpl_gui_ttd()
}
spriteset(AER3_gui_UGUI_A, "gfx/R_AER3_A.png") {												//GUI						
    tmpl_gui_UGUI()
}
spriteset(AER3_gui_opengfx_A, "gfx/R_AER3_A.png") {
    tmpl_gui_gfx()
}
spriteset(AER3_gui_ttd_A, "gfx/R_AER3_A.png") {
    tmpl_gui_ttd()
}
switch(FEAT_ROADTYPES, SELF, switch_AER3_gui_ttd, param_style) {
	1: AER3_gui_ttd_A;
	AER3_gui_ttd;
}
switch(FEAT_ROADTYPES, SELF, switch_AER3_gui_opengfx, param_style) {
	1: AER3_gui_opengfx_A;
	AER3_gui_opengfx;
}
switch(FEAT_ROADTYPES, SELF, switch_AER3_gui_UGUI, param_style) {
	1: AER3_gui_UGUI_A;
	AER3_gui_UGUI;
}
switch (FEAT_ROADTYPES, SELF, switch_AER3_gui, param_gui) {										//GUI
    1: switch_AER3_gui_opengfx;
    2: switch_AER3_gui_UGUI;
	switch_AER3_gui_ttd;
}
//==================================================================================================================================
//								Tram Sprites
//==================================================================================================================================
//===========================================================
//					TRAM TRACK (RAIL)
//===========================================================
spriteset(RAIL_underlay_0, "gfx/T_RAIL.png") {
    tmpl_underlay_overlay(1)
}
spriteset(RAIL_snow_underlay_0, "gfx/T_RAIL.png") {
    tmpl_underlay_overlay(81)
}
spriteset(RAIL_underlay_1, "gfx/T_RAIL.png") {
    tmpl_underlay_overlay(161)
}
spriteset(RAIL_snow_underlay_1, "gfx/T_RAIL.png") {
    tmpl_underlay_overlay(241)
}
switch(FEAT_TRAMTYPES, SELF, switch_RAIL_underlay_0, terrain_type) {							//UNDERLAY
    TILETYPE_SNOW: RAIL_snow_underlay_0;
    RAIL_underlay_0;
}
switch(FEAT_TRAMTYPES, SELF, switch_RAIL_underlay_1, terrain_type) {							//UNDERLAY
    TILETYPE_SNOW: RAIL_snow_underlay_1;
    RAIL_underlay_1;
}
switch(FEAT_TRAMTYPES, SELF, switch_RAIL_underlay, town_zone) {									//TOWN ZONE
	TOWNZONE_EDGE: switch_RAIL_underlay_0;
	switch_RAIL_underlay_1;
}

spriteset(switch_RAIL_overlay, "gfx/T_RAIL.png") {												//OVERLAY
    tmpl_underlay_overlay(321)
}

spriteset(RAIL_bridge, "gfx/T_RAIL.png") {
    tmpl_bridge_surfaces(0)
}
spriteset(RAIL_snow_bridge, "gfx/T_RAIL.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_TRAMTYPES, SELF, switch_RAIL_bridge, terrain_type) {								//BRIDGE
    TILETYPE_SNOW: RAIL_snow_bridge;
    RAIL_bridge;
}

spriteset(normal_RAIL_tunnels, "gfx/T_RAIL.png") {
    tmpl_tunnels(0,0)
}
spriteset(snow_RAIL_tunnels, "gfx/T_RAIL.png") {
    tmpl_tunnels(276,0)
}
spriteset(normal_RAIL_tunnels_1, "gfx/T_RAIL.png") {
    tmpl_tunnels(0,36)
}
spriteset(snow_RAIL_tunnels_1, "gfx/T_RAIL.png") {
    tmpl_tunnels(276,36)
}
switch(FEAT_TRAMTYPES, SELF, switch_RAIL_tunnels_0, terrain_type) {
    TILETYPE_SNOW: snow_RAIL_tunnels;
    normal_RAIL_tunnels;
}
switch(FEAT_TRAMTYPES, SELF, switch_RAIL_tunnels_1, terrain_type) {
    TILETYPE_SNOW: snow_RAIL_tunnels_1;
    normal_RAIL_tunnels_1;
}
switch(FEAT_TRAMTYPES, SELF, switch_RAIL_tunnels, town_zone) {									//TUNNELS
	TOWNZONE_EDGE: switch_RAIL_tunnels_0;
	switch_RAIL_tunnels_1;
}

spriteset(RAIL_depots, "gfx/T_RAIL.png") {
    tmpl_depot(0)
}
spriteset(RAIL_snow_depots, "gfx/T_RAIL.png") {
    tmpl_depot(414)
}
switch(FEAT_TRAMTYPES, SELF, switch_RAIL_depots, terrain_type) {								//DEPOT
    TILETYPE_SNOW: RAIL_snow_depots;
    RAIL_depots;
}

spriteset(RAIL_gui_UGUI, "gfx/T_RAIL.png") {
    tmpl_gui_UGUI()
}
spriteset(RAIL_gui_opengfx, "gfx/T_RAIL.png") {
    tmpl_gui_gfx()
}
spriteset(RAIL_gui_ttd, "gfx/T_RAIL.png") {
    tmpl_gui_ttd()
}
switch (FEAT_TRAMTYPES, SELF, switch_RAIL_gui, param_gui) {										//GUI
    1: RAIL_gui_opengfx;
    2: RAIL_gui_UGUI;
	RAIL_gui_ttd;
}
//===========================================================
//				TRAM TRACK (ELECTRIFIED) (ELRL)
//===========================================================
spriteset(ELRL_depots, "gfx/T_ELRL.png") {
    tmpl_depot(0)
}
spriteset(ELRL_snow_depots, "gfx/T_ELRL.png") {
    tmpl_depot(414)
}
switch(FEAT_TRAMTYPES, SELF, switch_ELRL_depots, terrain_type) {								//DEPOT
    TILETYPE_SNOW: ELRL_snow_depots;
    ELRL_depots;
}

spriteset(ELRL_gui_UGUI, "gfx/T_ELRL.png") {
    tmpl_gui_UGUI()
}
spriteset(ELRL_gui_opengfx, "gfx/T_ELRL.png") {
    tmpl_gui_gfx()
}
spriteset(ELRL_gui_ttd, "gfx/T_ELRL.png") {
    tmpl_gui_ttd()
}
switch (FEAT_TRAMTYPES, SELF, switch_ELRL_gui, param_gui) {										//GUI
    1: ELRL_gui_opengfx;
    2: ELRL_gui_UGUI;
	ELRL_gui_ttd;
}
//===========================================================
//				ISR TRAM TRACK (NIAN)
//===========================================================
spriteset(switch_NIAN_underlay, "gfx/T_NIAN.png") {												//UNDERLAY
    tmpl_underlay_overlay(1)
}

spriteset(switch_NIAN_overlay, "gfx/T_NIAN.png") {												//OVERLAY
    tmpl_underlay_overlay(321)
}

spriteset(NIAN_bridge, "gfx/T_NIAN.png") {
    tmpl_bridge_surfaces(0)
}
spriteset(NIAN_snow_bridge, "gfx/T_NIAN.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_TRAMTYPES, SELF, switch_NIAN_bridge, terrain_type) {								//BRIDGE
    TILETYPE_SNOW: NIAN_snow_bridge;
    NIAN_bridge;
}

spriteset(normal_NIAN_tunnels, "gfx/T_NIAN.png") {
    tmpl_tunnels(0,0)
}
spriteset(snow_NIAN_tunnels, "gfx/T_NIAN.png") {
    tmpl_tunnels(276,0)
}
switch(FEAT_TRAMTYPES, SELF, switch_NIAN_tunnels, terrain_type) {								//TUNNELS
    TILETYPE_SNOW: snow_NIAN_tunnels;
    normal_NIAN_tunnels;
}
//===========================================================
//		ISR TRAM TRACK (ELECTRIFIED) (NIAE)
//===========================================================
spriteset(NIAE_depots, "gfx/T_NIAE.png") {
    tmpl_depot(0)
}
spriteset(NIAE_snow_depots, "gfx/T_NIAE.png") {
    tmpl_depot(414)
}
switch(FEAT_TRAMTYPES, SELF, switch_NIAE_depots, terrain_type) {								//DEPOT
    TILETYPE_SNOW: NIAE_snow_depots;
    NIAE_depots;
}

spriteset(NIAE_gui_UGUI, "gfx/T_NIAE.png") {
    tmpl_gui_UGUI()
}
spriteset(NIAE_gui_opengfx, "gfx/T_NIAE.png") {
    tmpl_gui_gfx()
}
spriteset(NIAE_gui_ttd, "gfx/T_NIAE.png") {
    tmpl_gui_ttd()
}
switch (FEAT_TRAMTYPES, SELF, switch_NIAE_gui, param_gui) {										//GUI
    1: NIAE_gui_opengfx;
    2: NIAE_gui_UGUI;
	NIAE_gui_ttd;
}
//==================================================================================================================================
//									CATENARY
//==================================================================================================================================
spriteset(catenary_back_wood, "gfx/CATENARY/BACK_WOOD.png") {
    tmpl_catenary()
}
spriteset(catenary_back_steel, "gfx/CATENARY/BACK_STEEL.png") {
    tmpl_catenary()
}
spriteset(catenary_back_white, "gfx/CATENARY/BACK_WHITE.png") {
    tmpl_catenary()
}
spriteset(catenary_ELRL_front_wood, "gfx/CATENARY/ELRL_FRONT_WOOD.png") {
    tmpl_catenary()
}
spriteset(catenary_ELRL_front_steel, "gfx/CATENARY/ELRL_FRONT_STEEL.png") {
    tmpl_catenary()
}
spriteset(catenary_ELRL_front_white, "gfx/CATENARY/ELRL_FRONT_WHITE.png") {
    tmpl_catenary()
}
spriteset(catenary_ELRD_front_wood, "gfx/CATENARY/ELRD_FRONT_WOOD.png") {
    tmpl_catenary()
}
spriteset(catenary_ELRD_front_steel, "gfx/CATENARY/ELRD_FRONT_STEEL.png") {
    tmpl_catenary()
}
spriteset(catenary_ELRD_front_white, "gfx/CATENARY/ELRD_FRONT_WHITE.png") {
    tmpl_catenary()
}
//==================================================================================================================================
//									ONEWAY
//==================================================================================================================================
spriteset(oneway_ARROWS_0, "gfx/ONE_WAY.png") {
	tmpl_arrows_oneway(0)
}
spriteset(oneway_ARROWS_1, "gfx/ONE_WAY.png") {
	tmpl_arrows_oneway(18)
}
spriteset(oneway_ARROWS_2, "gfx/ONE_WAY.png") {
	tmpl_arrows_oneway(36)
}
spriteset(oneway_SIGN_0,     "gfx/ONE_WAY.png") {
	tmpl_sign_oneway(0, 0)
}
spriteset(oneway_SIGN_2,     "gfx/ONE_WAY.png") {
	tmpl_sign_oneway(210, 140)
}
spriteset(oneway_ARROWS_SIGN_1,     "gfx/ONE_WAY.png") {
	tmpl_arrows_sign_oneway(18, 0, 0)
}
//===========================================================
//					ROAD (ROAD)
//===========================================================
switch(FEAT_ROADTYPES, SELF, switch_ROAD_underlay, town_zone) {
	TOWNZONE_EDGE: switch_ORD2_underlay_0;
	switch_SRD1_underlay_1;
}

switch(FEAT_ROADTYPES, SELF, switch_ROAD_tunnels, town_zone) {
	TOWNZONE_EDGE: switch_ORD2_tunnels_0;
	switch_SRD1_tunnels_1;
}
//==================================================================================================================================
//									Road Definitions
//==================================================================================================================================
//===========================================================
//					ROAD (ROAD)
//===========================================================
	item(FEAT_ROADTYPES, ROAD_road, 0) {
		property {
			label:							"ROAD";
			name: 							string(STR_NAME_ROAD);
			powered_roadtype_list: 			["ROAD", "ORD2", "ORD4", "SRD1", "ARD0", "ARD3", "ARD5", "WRD1", "DRD3",
											 "ELRD", "AER3"];
			alternative_roadtype_list:		["ROAD", "ORD2", "ORD4", "SRD1", "ARD0", "ARD3", "ARD5", "WRD1", "DRD3",
											 "ELRD", "AER3"];
			roadtype_flags:					bitmask(ROADTYPE_FLAG_HIDDEN);
			introduces_roadtype_list:		["ORD2", "ORD4"];
			speed_limit:					40 km/h;
			}
		graphics {
				underlay: 					switch_ROAD_underlay;
				bridge_surfaces: 			switch_SRD1_bridge;
				tunnels:					switch_ROAD_tunnels;
			}
		}
//===========================================================
//						DIRT ROAD (ORD2)
//===========================================================
if (roadtype_available("ORD2") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_ROADTYPES, ORD2_road, 3) {
		property {
			label:							"ORD2";
			name: 							string(STR_NAME_ORD2);
			toolbar_caption: 				string(STR_STRING_2, string(STR_TOOLBAR_CAPTION_ROAD), string(STR_CONSTRUCTION));
			menu_text: 						string(STR_STRING_3, string(STR_NAME_ORD2), string(STR_CONSTRUCTION), string(STR_WHITE));
			build_window_caption: 			string(STR_BUILD_WINDOW_CAPTION_ROAD);
			autoreplace_text: 				string(STR_AUTOREPLACE_ROAD);
			new_engine_text: 				string(STR_NEW_ENGINE_ROAD);
			powered_roadtype_list: 			["ROAD", "ORD2", "ORD4", "SRD1", "ARD0", "ARD3", "ARD5", "WRD1", "DRD3",
											 "ELRD", "AER3"];
			alternative_roadtype_list:		["ROAD", "ORD2", "ORD4", "SRD1", "ARD0", "ARD3", "ARD5", "WRD1", "DRD3",
											 "ELRD", "AER3"];
			construction_cost:				5;
			maintenance_cost: 				5;
			sort_order: 					1;
			speed_limit:					(speed_limit_ORD2) km/h;
			}
		graphics {
			underlay: 						switch_ORD2_underlay;
			depots: 						switch_ORD2_depots;
			bridge_surfaces: 				switch_ORD0_bridge;
			roadstops: 						switch_ORD2_roadstops;
			tunnels:						switch_ORD2_tunnels;
			oneway:							oneway_SIGN_2;
			gui:							switch_ORD2_gui;
			}
		}
	}
//===========================================================
//						GRAVEL ROAD (ORD4)
//===========================================================
if (roadtype_available("ORD4") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_ROADTYPES, ORD4_road, 5) {
		property {
			label:							"ORD4";
			name: 							string(STR_NAME_ORD4);
			toolbar_caption: 				string(STR_STRING_2, string(STR_TOOLBAR_CAPTION_ROAD), string(STR_CONSTRUCTION));
			menu_text: 						string(STR_STRING_3, string(STR_NAME_ORD4), string(STR_CONSTRUCTION), string(STR_WHITE));
			build_window_caption: 			string(STR_BUILD_WINDOW_CAPTION_ROAD);
			autoreplace_text: 				string(STR_AUTOREPLACE_ROAD);
			new_engine_text: 				string(STR_NEW_ENGINE_ROAD);
			powered_roadtype_list: 			["ROAD", "ORD2", "ORD4", "SRD1", "ARD0", "ARD3", "ARD5", "WRD1", "DRD3",
											 "ELRD", "AER3"];
			alternative_roadtype_list:		["ROAD", "ORD2", "ORD4", "SRD1", "ARD0", "ARD3", "ARD5", "WRD1", "DRD3",
											 "ELRD", "AER3"];
			roadtype_flags: 				bitmask(ROADTYPE_FLAG_NO_HOUSES);
			construction_cost:				9;
			maintenance_cost: 				9;
			sort_order: 					2;
			speed_limit:					(speed_limit_ORD4) km/h;
			}
		graphics {
			underlay: 						switch_ORD4_underlay;
			depots: 						switch_ORD4_depots;
			bridge_surfaces: 				switch_ORD4_bridge;
			roadstops: 						switch_ORD4_roadstops;
			tunnels:						switch_ORD4_tunnels;
			oneway:							oneway_SIGN_2;
			gui:							switch_ORD4_gui;
			}
		}
	}
//===========================================================
//					CONCRETE ROAD (SRD1)
//===========================================================
if (roadtype_available("SRD1") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_ROADTYPES, SRD1_road, 8) {
		property {
			label:							"SRD1";
			name: 							string(STR_NAME_SRD1);
			toolbar_caption: 				string(STR_STRING_2, string(STR_TOOLBAR_CAPTION_ROAD), string(STR_CONSTRUCTION));
			menu_text:						string(STR_STRING_3, string(STR_NAME_SRD1), string(STR_CONSTRUCTION), string(STR_WHITE));
			build_window_caption: 			string(STR_BUILD_WINDOW_CAPTION_ROAD);
			autoreplace_text: 				string(STR_AUTOREPLACE_ROAD);
			new_engine_text: 				string(STR_NEW_ENGINE_ROAD);
			powered_roadtype_list: 			["ROAD", "ORD2", "ORD4", "SRD1", "ARD0", "ARD3", "ARD5", "WRD1", "DRD3",
											 "ELRD", "AER3"];
			alternative_roadtype_list:		["ROAD", "ORD2", "ORD4", "SRD1", "ARD0", "ARD3", "ARD5", "WRD1", "DRD3",
											 "ELRD", "AER3"];
			introduction_date:				date(1900,01,01);
			construction_cost:				16;
			maintenance_cost: 				16;
			sort_order: 					3;
			speed_limit:					(speed_limit_SRD1 == 29) ? 0 : (speed_limit_SRD1) km/h;
			}
		graphics {
			underlay: 						switch_SRD1_underlay;
			depots: 						switch_SRD1_depots;
			bridge_surfaces: 				switch_SRD1_bridge;
			roadstops: 						switch_SRD1_roadstops;
			tunnels:						switch_SRD1_tunnels;
			oneway:							oneway_SIGN_0;
			gui: 							switch_SRD1_gui;
			}
		}
	}
//===========================================================
//					ASPHALT ROAD (ARD0)
//===========================================================
if (roadtype_available("ARD0") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_ROADTYPES, ARD0_road, 10) {
		property {
			label:							"ARD0";
			name: 							string(STR_NAME_ARD0);
			toolbar_caption: 				string(STR_STRING_2, string(STR_TOOLBAR_CAPTION_ROAD), string(STR_CONSTRUCTION));
			menu_text: 						string(STR_STRING_3, string(STR_NAME_ARD0), string(STR_CONSTRUCTION), string(STR_WHITE));
			build_window_caption: 			string(STR_BUILD_WINDOW_CAPTION_ROAD);
			autoreplace_text: 				string(STR_AUTOREPLACE_ROAD);
			new_engine_text: 				string(STR_NEW_ENGINE_ROAD);
			powered_roadtype_list: 			["ROAD", "ORD2", "ORD4", "SRD1", "ARD0", "ARD3", "ARD5", "WRD1", "DRD3",
											 "ELRD", "AER3"];
			alternative_roadtype_list:		["ROAD", "ORD2", "ORD4", "SRD1", "ARD0", "ARD3", "ARD5", "WRD1", "DRD3",
											 "ELRD", "AER3"];
			roadtype_flags:					bitmask(ROADTYPE_FLAG_TOWN_BUILD);
			introduction_date: 				date(1925,01,01);
			construction_cost:				15;
			maintenance_cost: 				15;
			sort_order: 					4;
			speed_limit:					(speed_limit_ARD0 == 29) ? 0 : (speed_limit_ARD0) km/h;
			}
		graphics {
			underlay: 						switch_ARD0_underlay;
			depots: 						switch_ARD0_depots;
			bridge_surfaces: 				switch_ARD0_bridge;
			roadstops: 						switch_ARD0_roadstops;
			tunnels:						switch_ARD0_tunnels;
			oneway:							oneway_ARROWS_2;
			gui:							switch_ARD0_gui;
			}
		}
	}
//===========================================================
//				ASPHALT ROAD /W STRIPES (ARD3)
//===========================================================
if (roadtype_available("ARD3") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_ROADTYPES, ARD3_road, 15) {
		property {
			label:							"ARD3";
			name: 							string(STR_STRING_2, string(STR_NAME_ARD0), string(STR_CLASS_B));
			toolbar_caption: 				string(STR_STRING_2, string(STR_TOOLBAR_CAPTION_ROAD), string(STR_CONSTRUCTION));
			menu_text: 						string(STR_STRING_4, string(STR_NAME_ARD0), string(STR_CONSTRUCTION), string(STR_CLASS_B), string(STR_WHITE));
			build_window_caption: 			string(STR_BUILD_WINDOW_CAPTION_ROAD);
			autoreplace_text: 				string(STR_AUTOREPLACE_ROAD);
			new_engine_text: 				string(STR_NEW_ENGINE_ROAD);
			powered_roadtype_list: 			["ROAD", "ORD2", "ORD4", "SRD1", "ARD0", "ARD3", "ARD5", "WRD1", "DRD3",
											 "ELRD", "AER3"];
			alternative_roadtype_list:		["ROAD", "ORD2", "ORD4", "SRD1", "ARD0", "ARD3", "ARD5", "WRD1", "DRD3",
											 "ELRD", "AER3"];
			roadtype_flags:					bitmask(ROADTYPE_FLAG_TOWN_BUILD);
			introduction_date: 				date(1960,01,01);
			construction_cost:				21;
			maintenance_cost: 				21;
			sort_order: 					6;
			speed_limit:					(speed_limit_ARD3 == 29) ? 0 : (speed_limit_ARD3) km/h;
			}
		graphics {
			underlay: 						switch_ARD3_underlay;
			depots: 						switch_ARD3_depots;
			bridge_surfaces: 				switch_ARD3_bridge_style;
			roadstops: 						switch_ARD3_roadstops;
			tunnels:						switch_ARD3_tunnels;
			oneway:							oneway_ARROWS_1;
			gui: 							switch_ARD3_gui;
			}
		}
	}
//===========================================================
//			MODERN ASPHALT ROAD /W STRIPES (ARD5)
//===========================================================
if (roadtype_available("ARD5") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_ROADTYPES, ARD5_road, 18) {
		property {
			label:							"ARD5";
			name: 							string(STR_STRING_2, string(STR_NAME_ARD0), string(STR_CLASS_A));
			toolbar_caption: 				string(STR_STRING_2, string(STR_TOOLBAR_CAPTION_ROAD), string(STR_CONSTRUCTION));
			menu_text: 						string(STR_STRING_4, string(STR_NAME_ARD0), string(STR_CONSTRUCTION), string(STR_CLASS_A),  string(STR_WHITE));
			build_window_caption: 			string(STR_BUILD_WINDOW_CAPTION_ROAD);
			autoreplace_text: 				string(STR_AUTOREPLACE_ROAD);
			new_engine_text: 				string(STR_NEW_ENGINE_ROAD);
			powered_roadtype_list: 			["ROAD", "ORD2", "ORD4", "SRD1", "ARD0", "ARD3", "ARD5", "WRD1", "DRD3",
											 "ELRD", "AER3"];
			alternative_roadtype_list:		["ROAD", "ORD2", "ORD4", "SRD1", "ARD0", "ARD3", "ARD5", "WRD1", "DRD3",
											 "ELRD", "AER3"];
			introduction_date: 				date(1975,01,01);
			construction_cost:				29;
			maintenance_cost: 				29;
			sort_order: 					8;
			speed_limit:					(speed_limit_ARD5 == 29) ? 0 : (speed_limit_ARD5) km/h;
			}
		graphics {
			underlay: 						switch_ARD5_underlay;
			depots: 						switch_ARD5_depots;
			bridge_surfaces: 				switch_ARD5_bridge;
			roadstops: 						switch_ARD5_roadstops;
			tunnels:						switch_ARD5_tunnels;
			oneway:							oneway_ARROWS_0;
			gui:							switch_ARD5_gui;
			}
		}
	}
//===========================================================
//					EXPRESSWAY (WRD1)
//===========================================================
if (roadtype_available("WRD1") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_ROADTYPES, WRD1_road, 21) {
		property {
			label:							"WRD1";
			name: 							string(STR_NAME_WRD0);
			toolbar_caption: 				string(STR_STRING_2, string(STR_TOOLBAR_CAPTION_ROAD), string(STR_CONSTRUCTION));
			menu_text: 						string(STR_STRING_2, string(STR_NAME_WRD0), string(STR_CONSTRUCTION));
			build_window_caption: 			string(STR_BUILD_WINDOW_CAPTION_ROAD);
			autoreplace_text: 				string(STR_AUTOREPLACE_ROAD);
			new_engine_text: 				string(STR_NEW_ENGINE_ROAD);
			powered_roadtype_list: 			["ROAD", "ORD2", "ORD4", "SRD1", "ARD0", "ARD3", "ARD5", "WRD1", "DRD3",
											 "ELRD", "AER3"];
			alternative_roadtype_list:		["ROAD", "ORD2", "ORD4", "SRD1", "ARD0", "ARD3", "ARD5", "WRD1", "DRD3",
											 "ELRD", "AER3"];
			roadtype_flags: 				bitmask(ROADTYPE_FLAG_NO_LEVEL_CROSSING, ROADTYPE_FLAG_NO_HOUSES);
			introduction_date: 				date(1980,01,01);
			construction_cost:				54;
			maintenance_cost: 				54;
			sort_order: 					9;
			}
		graphics {
			underlay: 						switch_WRD1_underlay;
			depots: 						switch_WRD1_depots;
			bridge_surfaces: 				switch_WRD1_bridge;
			roadstops: 						switch_WRD1_roadstops;
			tunnels:						switch_WRD1_tunnels;
			oneway:							oneway_ARROWS_0;
			gui:							switch_WRD1_gui;
			}
		}
	}
//===========================================================
//					ISR ROAD (DRD3)
//===========================================================
if (roadtype_available("DRD3") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_ROADTYPES, DRD3_road, 31) {
		property {
			label:							"DRD3";
			name: 							string(STR_NAME_DRD3);
			toolbar_caption: 				string(STR_STRING_2, string(STR_TOOLBAR_CAPTION_ROAD), string(STR_CONSTRUCTION));
			menu_text: 						string(STR_STRING_3, string(STR_NAME_DRD3), string(STR_CONSTRUCTION), string(STR_WHITE));
			build_window_caption: 			string(STR_BUILD_WINDOW_CAPTION_ROAD);
			autoreplace_text: 				string(STR_AUTOREPLACE_ROAD);
			new_engine_text: 				string(STR_NEW_ENGINE_ROAD);
			powered_roadtype_list: 			["ROAD", "ORD2", "ORD4", "SRD1", "ARD0", "ARD3", "ARD5", "WRD1", "DRD3",
											 "ELRD", "AER3"];
			alternative_roadtype_list:		["ROAD", "ORD2", "ORD4", "SRD1", "ARD0", "ARD3", "ARD5", "WRD1", "DRD3",
											 "ELRD", "AER3"];
			roadtype_flags: 				bitmask(ROADTYPE_FLAG_NO_HOUSES);
			introduction_date:				date(1900,01,01);
			construction_cost:				24;
			maintenance_cost: 				24;
			sort_order: 					10;
			speed_limit:					(speed_limit_DRD3 == 29) ? 0 : (speed_limit_DRD3) km/h;
			}
		graphics {
			underlay: 						switch_DRD3_underlay;
			depots: 						switch_DRD3_depots;
			bridge_surfaces: 				switch_DRD3_bridge;
			roadstops: 						switch_DRD3_roadstops;
			tunnels:						switch_DRD3_tunnels;
			oneway:							oneway_ARROWS_SIGN_1;
			gui: 							switch_DRD3_gui;
			}
		}
	}
//==================================================================================================================================
//									Electrified Road Definitions
//==================================================================================================================================
//===========================================================
//					ASPHALT ROAD (ELECTRIFIED) (AER0)
//===========================================================
item(FEAT_ROADTYPES, ELRL_road, 7) {
		property {
			label:							"ELRD";
			name: 							string(STR_STRING_2, string(STR_NAME_ARD0), string(STR_ELECTRIFIELD));
			toolbar_caption: 				string(STR_STRING_2, string(STR_TOOLBAR_CAPTION_ROAD), string(STR_CONSTRUCTION));
			menu_text: 						string(STR_STRING_4, string(STR_NAME_ARD0), string(STR_CONSTRUCTION), string(STR_ELECTRIFIELD), string(STR_WHITE));
			build_window_caption: 			string(STR_BUILD_WINDOW_CAPTION_ELRD);
			autoreplace_text: 				string(STR_AUTOREPLACE_ELRD);
			new_engine_text: 				string(STR_NEW_ENGINE_ELRD);
			powered_roadtype_list: 			["ELRD", "AER3"];
			alternative_roadtype_list:		["ELRD", "AER3"];
			roadtype_flags: 				bitmask(ROADTYPE_FLAG_CATENARY);
			construction_cost:				23;
			maintenance_cost: 				23;
			sort_order: 					5;
			speed_limit:					(speed_limit_ARD0 == 29) ? 0 : (speed_limit_ARD0) km/h;
			}
		graphics {
			underlay: 						switch_ARD0_underlay;
			depots: 						switch_AER0_depots;
			bridge_surfaces: 				switch_ARD0_bridge;
			roadstops: 						switch_ARD0_roadstops;
			tunnels:						switch_ARD0_tunnels;
			oneway:							oneway_ARROWS_2;
			catenary_back: 					catenary_back_wood;
			catenary_front: 				catenary_ELRD_front_wood;
			gui:							switch_AER0_gui;
			}
		}
//===========================================================
//				IMPROVED ASPHALT ROAD W/ STRIPES (AER3)
//===========================================================
if (roadtype_available("AER3") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_ROADTYPES, AER3_road, 16) {
		property {
			label:							"AER3";
			name: 							string(STR_STRING_3, string(STR_NAME_ARD0), string(STR_CLASS_B), string(STR_ELECTRIFIELD));
			toolbar_caption: 				string(STR_STRING_2, string(STR_TOOLBAR_CAPTION_ROAD), string(STR_CONSTRUCTION));
			menu_text: 						string(STR_STRING_5, string(STR_NAME_ARD0), string(STR_CONSTRUCTION), string(STR_CLASS_B), string(STR_ELECTRIFIELD), string(STR_WHITE));
			build_window_caption: 			string(STR_BUILD_WINDOW_CAPTION_ELRD);
			autoreplace_text: 				string(STR_AUTOREPLACE_ELRD);
			new_engine_text: 				string(STR_NEW_ENGINE_ELRD);
			powered_roadtype_list: 			["ELRD", "AER3"];
			alternative_roadtype_list:		["ELRD", "AER3"];
			roadtype_flags: 				bitmask(ROADTYPE_FLAG_CATENARY);
			introduction_date: 				date(1960,01,01);
			requires_roadtype_list:			["ELRD"];
			construction_cost:				29;
			maintenance_cost: 				29;
			sort_order: 					7;
			speed_limit:					(speed_limit_ARD3 == 29) ? 0 : (speed_limit_ARD3) km/h;
			}
		graphics {
			underlay: 						switch_ARD3_underlay;
			depots: 						switch_AER3_depots;
			bridge_surfaces: 				switch_ARD3_bridge_style;
			roadstops: 						switch_ARD3_roadstops;
			tunnels:						switch_ARD3_tunnels;
			oneway:							oneway_ARROWS_1;
			catenary_back: 					catenary_back_steel;
			catenary_front: 				catenary_ELRD_front_steel;
			gui:							switch_AER3_gui;
			}
		}
	}
//==================================================================================================================================
//									Tram Definitions
//==================================================================================================================================
//===========================================================
//					TRAM TRACK (RAIL)
//===========================================================
	item(FEAT_TRAMTYPES, RAIL_tram, 34) {
		property {
			label:							"RAIL";
			name: 							string(STR_NAME_RAIL);
			toolbar_caption: 				string(STR_STRING_2, string(STR_TOOLBAR_CAPTION_TRAM), string(STR_CONSTRUCTION));
			menu_text: 						string(STR_STRING_3, string(STR_NAME_RAIL), string(STR_CONSTRUCTION), string(STR_WHITE));
			build_window_caption: 			string(STR_BUILD_WINDOW_CAPTION_TRAM);
			autoreplace_text: 				string(STR_AUTOREPLACE_TRAM);
			new_engine_text: 				string(STR_NEW_ENGINE_TRAM);
			powered_tramtype_list: 			["RAIL", "ELRL", "NIAE"];
			alternative_tramtype_list:		["RAIL"];
			construction_cost: 				14;
			maintenance_cost:				14;
			sort_order: 					0;
			speed_limit:					(speed_limit_RAIL == 29) ? 0 : (speed_limit_RAIL) km/h;
			}
		graphics {
			track_overlay: 					switch_RAIL_overlay;
			underlay: 						switch_RAIL_underlay;
			depots: 						switch_RAIL_depots;
			tunnels:						switch_RAIL_tunnels;
			bridge_surfaces: 				switch_RAIL_bridge;
			gui: 							switch_RAIL_gui;
			}
		}
//===========================================================
//					TRAM TRACK (ELECTRIFIED) (ELRL)
//===========================================================
	item(FEAT_TRAMTYPES, ELRL_tram, 35) {
		property {
			label:							"ELRL";
			name: 							string(STR_STRING_2, string(STR_NAME_RAIL), string(STR_ELECTRIFIELD));
			toolbar_caption: 				string(STR_STRING_2, string(STR_TOOLBAR_CAPTION_TRAM), string(STR_CONSTRUCTION));
			menu_text: 						string(STR_STRING_4, string(STR_NAME_RAIL), string(STR_CONSTRUCTION), string(STR_ELECTRIFIELD), string(STR_WHITE));
			build_window_caption: 			string(STR_BUILD_WINDOW_CAPTION_TRAM_EL);
			autoreplace_text: 				string(STR_AUTOREPLACE_TRAM_EL);
			new_engine_text: 				string(STR_NEW_ENGINE_TRAM_EL);
			powered_tramtype_list: 			["ELRL", "NIAE"];
			alternative_tramtype_list:		["ELRL", "NIAE"];
			tramtype_flags: 				bitmask(TRAMTYPE_FLAG_CATENARY);
			construction_cost: 				20;
			maintenance_cost:				20;
			sort_order: 					1;
			speed_limit:					(speed_limit_ELRL == 29) ? 0 : (speed_limit_ELRL) km/h;
			}
		graphics {
			track_overlay: 					switch_RAIL_overlay;
			underlay: 						switch_RAIL_underlay;
			depots: 						switch_ELRL_depots;
			tunnels:						switch_RAIL_tunnels;
			bridge_surfaces: 				switch_RAIL_bridge;
			catenary_back: 					catenary_back_wood;
			catenary_front: 				catenary_ELRL_front_wood;
			gui: 							switch_ELRL_gui;
			}
		}
//===========================================================
//			ISR TRAM TRACK (ELECTRIFIED) (NIAE)
//===========================================================
if (tramtype_available("NIAE") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_TRAMTYPES, NIAE_tram, 42) {
		property {
			label:							"NIAE";
			name: 							string(STR_STRING_2, string(STR_NAME_NIAN), string(STR_ELECTRIFIELD));
			toolbar_caption: 				string(STR_STRING_2, string(STR_TOOLBAR_CAPTION_TRAM), string(STR_CONSTRUCTION));
			menu_text: 						string(STR_STRING_4, string(STR_NAME_NIAN), string(STR_CONSTRUCTION), string(STR_ELECTRIFIELD), string(STR_WHITE));
			build_window_caption: 			string(STR_BUILD_WINDOW_CAPTION_TRAM_EL);
			autoreplace_text: 				string(STR_AUTOREPLACE_TRAM_EL);
			new_engine_text: 				string(STR_NEW_ENGINE_TRAM_EL);
			powered_tramtype_list: 			["ELRL", "NIAE"];
			alternative_tramtype_list:		["ELRL", "NIAE"];
			tramtype_flags: 				bitmask(TRAMTYPE_FLAG_CATENARY);
			requires_tramtype_list:			["ELRL"];
			introduction_date:				date(1900,01,01);
			speed_limit: 					(speed_limit_NIAE == 29) ? 0 : (speed_limit_NIAE) km/h;
			construction_cost: 				17;
			maintenance_cost:				17;
			sort_order: 					2;
			}
		graphics {
			track_overlay: 					switch_RAIL_overlay;
			underlay: 						switch_NIAN_underlay;
			depots: 						switch_NIAE_depots;
			tunnels:						switch_NIAN_tunnels;
			bridge_surfaces: 				switch_NIAN_bridge;
			catenary_back: 					catenary_back_wood;
			catenary_front: 				catenary_ELRL_front_wood;
			gui: 							switch_NIAE_gui;
			}
		}
	}
//==================================================================================================================================
//												TUNNELS
//==================================================================================================================================
template template_road_tunnels(y) {
 [     1,   1+y,    64,    39,    -31,     -8]
 [    66,   1+y,    64,    39,    -31,    -38]
 [   131,   1+y,    64,    31,    -31,     -8]
 [   196,   1+y,    64,    31,    -31,    -38]
 [   261,   1+y,    64,    31,    -31,     -8]
 [   326,   1+y,    64,    31,    -31,    -38]
 [   391,   1+y,    64,    39,    -31,     -8]
 [   456,   1+y,    64,    39,    -31,    -38]
}

if ((climate == CLIMATE_ARCTIC) && (param["OG+4", 1] == 1)) {
	replace replace_tunnels_landscape (2389, "gfx/OTHER.png") {
		template_road_tunnels(200)
	}
	replace replace_tunnels_landscape_arctic (2421, "gfx/OTHER.png") {
		template_road_tunnels(240)
	}
}	else
if ((climate == CLIMATE_TROPICAL)) {
	replace replace_tunnels_subtropic (2389, "gfx/OTHER.png") {
		template_road_tunnels(120)
	}
	replace replace_tunnels_desert (2421, "gfx/OTHER.png") {
		template_road_tunnels(160)
	}
}	else
if ((climate == CLIMATE_ARCTIC)) {
	replace replace_tunnels_subarctic (2389, "gfx/OTHER.png") {
		template_road_tunnels(40)
	}
	replace replace_tunnels_arctic (2421, "gfx/OTHER.png") {
		template_road_tunnels(80)
	}
}	else	{
	replace replace_tunnels_temperate (2389, "gfx/OTHER.png") {
		template_road_tunnels(0)
	}
}
//==================================================================================================================================
//												ROAD CITY (SIDEWALK)
//==================================================================================================================================
replace road_city(1313, "gfx/R_URD0.png") {
	tmpl_underlay_overlay(1)
	}
//==================================================================================================================================
//												STATIONS BUS AND LORRY
//==================================================================================================================================
template template_stop_tiles() {
    [1, 461, 64, 31, -31, 0]
    [1, 461, 64, 31, -31, 0]
    [1, 461, 64, 31, -31, 0]
    [1, 461, 64, 31, -31, 0]
}
template template_stop_bus() {
	[     1,   281,    1,     1,     0,     0]
	[     1,   281,    1,     1,     0,     0]
	[     1,   281,    1,     1,     0,     0]
	[     1,   281,    1,     1,     0,     0]
	[     1,   281,   64,    44,    -5,   -26]
	[    66,   281,   64,    44,   -31,   -13]
	[   131,   281,   64,    44,   -31,   -13]
	[   196,   281,   64,    44,   -57,   -26]
	[   261,   281,   64,    44,   -57,   -26]
	[   326,   281,   64,    44,   -11,   -29]
	[   391,   281,   64,    44,   -25,   -16]
	[   456,   281,   64,    44,   -31,   -13]
}
template template_stop_truck() {
	[     1,   371,   64,    44,   -61,   -28]
	[    66,   371,   64,    44,    -7,   -31]
	[   131,   371,   64,    44,   -25,   -16]
	[   196,   371,   64,    44,   -31,   -13]
	[   261,   371,   64,    44,    -5,   -26]
	[   326,   371,   64,    44,   -31,   -13]
	[   391,   371,   64,    44,   -31,   -13]
	[   456,   371,   64,    44,   -57,   -26]
	[     1,   371,    1,     1,     0,     0]
	[     1,   371,    1,     1,     0,     0]
	[     1,   371,    1,     1,     0,     0]
	[     1,   371,    1,     1,     0,     0]
}
template template_stop_new() {
	[     1,   326,    64,   44,    -5,   -26]
	[    66,   326,    64,   44,   -31,   -13]
	[   131,   326,    64,   44,   -31,   -13]
	[   196,   326,    64,   44,   -57,   -26]
	[     1,   416,    64,   44,    -5,   -26]
	[    66,   416,    64,   44,   -31,   -13]
	[   131,   416,    64,   44,   -31,   -13]
	[   196,   416,    64,   44,   -57,   -26]
}

replace road_stop_tiles_bus(2692, "gfx/OTHER.png") {
	 template_stop_tiles()
	}
replace road_stop_tiles_truck(2708, "gfx/OTHER.png") {
	 template_stop_tiles()
	}
replace road_stop_bus(2696, "gfx/OTHER.png") {
	 template_stop_bus()
	}
replace road_stop_truck(2712, "gfx/OTHER.png") {
	 template_stop_truck()
	}
replacenew road_stop_new(ROAD_STOPS, "gfx/OTHER.png") {
	 template_stop_new()
	}
//==================================================================================================================================
//												END
//==================================================================================================================================